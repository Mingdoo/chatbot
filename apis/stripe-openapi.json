{
  "info": {
    "contact": {
      "email": "dev-platform@stripe.com",
      "name": "Stripe Dev Platform Team",
      "url": "https://stripe.com"
    },
    "description": "The Stripe REST API. Please see https://stripe.com/docs/api for more details.",
    "termsOfService": "https://stripe.com/us/terms/",
    "title": "Stripe API",
    "version": "2025-07-30.basil",
    "x-stripeSpecFilename": "spec3"
  },
  "openapi": "3.0.0",
  "paths": {
    "/v1/account": {
      "get": {
        "description": "<p>Retrieves the details of an account.</p>",
        "operationId": "GetAccount",
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "explode": true,
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "style": "deepObject"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        },
        "summary": "Retrieve account"
      }
    },
    "/v1/account_links": {
      "post": {
        "description": "<p>Creates an AccountLink object that includes a single-use Stripe URL that the platform can redirect their user to in order to take them through the Connect Onboarding flow.</p>",
        "operationId": "PostAccountLinks",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {
                "collection_options": {
                  "explode": true,
                  "style": "deepObject"
                },
                "expand": {
                  "explode": true,
                  "style": "deepObject"
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "account": {
                    "description": "The identifier of the account to create an account link for.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "collect": {
                    "description": "The collect parameter is deprecated. Use `collection_options` instead.",
                    "enum": [
                      "currently_due",
                      "eventually_due"
                    ],
                    "type": "string"
                  },
                  "collection_options": {
                    "description": "Specifies the requirements that Stripe collects from connected accounts in the Connect Onboarding flow.",
                    "properties": {
                      "fields": {
                        "enum": [
                          "currently_due",
                          "eventually_due"
                        ],
                        "type": "string"
                      },
                      "future_requirements": {
                        "enum": [
                          "include",
                          "omit"
                        ],
                        "type": "string"
                      }
                    },
                    "title": "collection_options_params",
                    "type": "object"
                  },
                  "expand": {
                    "description": "Specifies which fields in the response should be expanded.",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "refresh_url": {
                    "description": "The URL the user will be redirected to if the account link is expired, has been previously-visited, or is otherwise invalid. The URL you specify should attempt to generate a new account link with the same parameters used to create the original account link, then redirect the user to the new account link's URL so they can continue with Connect Onboarding. If a new account link cannot be generated or the redirect fails you should display a useful error to the user.",
                    "type": "string"
                  },
                  "return_url": {
                    "description": "The URL that the user will be redirected to upon leaving or completing the linked flow.",
                    "type": "string"
                  },
                  "type": {
                    "description": "The type of account link the user is requesting.\n\nYou can create Account Links of type `account_update` only for connected accounts where your platform is responsible for collecting requirements, including Custom accounts. You can't create them for accounts that have access to a Stripe-hosted Dashboard. If you use [Connect embedded components](/connect/get-started-connect-embedded-components), you can include components that allow your connected accounts to update their own information. For an account without Stripe-hosted Dashboard access where Stripe is liable for negative balances, you must use embedded components.",
                    "enum": [
                      "account_onboarding",
                      "account_update"
                    ],
                    "type": "string",
                    "x-stripeBypassValidation": true
                  }
                },
                "required": [
                  "account",
                  "type"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account_link"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        },
        "summary": "Create an account link"
      }
    },
    "/v1/account_sessions": {
      "post": {
        "description": "<p>Creates a AccountSession object that includes a single-use token that the platform can use on their front-end to grant client-side API access.</p>",
        "operationId": "PostAccountSessions",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {
                "components": {
                  "explode": true,
                  "style": "deepObject"
                },
                "expand": {
                  "explode": true,
                  "style": "deepObject"
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "account": {
                    "description": "The identifier of the account to create an Account Session for.",
                    "type": "string"
                  },
                  "components": {
                    "description": "Each key of the dictionary represents an embedded component, and each embedded component maps to its configuration (e.g. whether it has been enabled or not).",
                    "properties": {
                      "account_management": {
                        "properties": {
                          "enabled": {
                            "type": "boolean"
                          },
                          "features": {
                            "properties": {
                              "disable_stripe_user_authentication": {
                                "type": "boolean"
                              },
                              "external_account_collection": {
                                "type": "boolean"
                              }
                            },
                            "title": "account_features_param",
                            "type": "object"
                          }
                        },
                        "required": [
                          "enabled"
                        ],
                        "title": "account_config_param",
                        "type": "object"
                      },
                      "account_onboarding": {
                        "properties": {
                          "enabled": {
                            "type": "boolean"
                          },
                          "features": {
                            "properties": {
                              "disable_stripe_user_authentication": {
                                "type": "boolean"
                              },
                              "external_account_collection": {
                                "type": "boolean"
                              }
                            },
                            "title": "account_features_param",
                            "type": "object"
                          }
                        },
                        "required": [
                          "enabled"
                        ],
                        "title": "account_config_param",
                        "type": "object"
                      },
                      "balances": {
                        "properties": {
                          "enabled": {
                            "type": "boolean"
                          },
                          "features": {
                            "properties": {
                              "disable_stripe_user_authentication": {
                                "type": "boolean"
                              },
                              "edit_payout_schedule": {
                                "type": "boolean"
                              },
                              "external_account_collection": {
                                "type": "boolean"
                              },
                              "instant_payouts": {
                                "type": "boolean"
                              },
                              "standard_payouts": {
                                "type": "boolean"
                              }
                            },
                            "title": "payouts_features_param",
                            "type": "object"
                          }
                        },
                        "required": [
                          "enabled"
                        ],
                        "title": "payouts_config_param",
                        "type": "object"
                      },
                      "disputes_list": {
                        "properties": {
                          "enabled": {
                            "type": "boolean"
                          },
                          "features": {
                            "properties": {
                              "capture_payments": {
                                "type": "boolean"
                              },
                              "destination_on_behalf_of_charge_management": {
                                "type": "boolean"
                              },
                              "dispute_management": {
                                "type": "boolean"
                              },
                              "refund_management": {
                                "type": "boolean"
                              }
                            },
                            "title": "disputes_list_features_param",
                            "type": "object"
                          }
                        },
                        "required": [
                          "enabled"
                        ],
                        "title": "disputes_list_config_param",
                        "type": "object"
                      },
                      "documents": {
                        "properties": {
                          "enabled": {
                            "type": "boolean"
                          },
                          "features": {
                            "properties": {},
                            "title": "base_features_param",
                            "type": "object"
                          }
                        },
                        "required": [
                          "enabled"
                        ],
                        "title": "base_config_param",
                        "type": "object"
                      },
                      "financial_account": {
                        "properties": {
                          "enabled": {
                            "type": "boolean"
                          },
                          "features": {
                            "properties": {
                              "disable_stripe_user_authentication": {
                                "type": "boolean"
                              },
                              "external_account_collection": {
                                "type": "boolean"
                              },
                              "send_money": {
                                "type": "boolean"
                              },
                              "transfer_balance": {
                                "type": "boolean"
                              }
                            },
                            "title": "financial_account_features_param",
                            "type": "object"
                          }
                        },
                        "required": [
                          "enabled"
                        ],
                        "title": "financial_account_config_param",
                        "type": "object"
                      },
                      "financial_account_transactions": {
                        "properties": {
                          "enabled": {
                            "type": "boolean"
                          },
                          "features": {
                            "properties": {
                              "card_spend_dispute_management": {
                                "type": "boolean"
                              }
                            },
                            "title": "financial_account_transactions_features_param",
                            "type": "object"
                          }
                        },
                        "required": [
                          "enabled"
                        ],
                        "title": "financial_account_transactions_config_param",
                        "type": "object"
                      },
                      "instant_payouts_promotion": {
                        "properties": {
                          "enabled": {
                            "type": "boolean"
                          },
                          "features": {
                            "properties": {
                              "disable_stripe_user_authentication": {
                                "type": "boolean"
                              },
                              "external_account_collection": {
                                "type": "boolean"
                              },
                              "instant_payouts": {
                                "type": "boolean"
                              }
                            },
                            "title": "instant_payouts_promotion_features_param",
                            "type": "object"
                          }
                        },
                        "required": [
                          "enabled"
                        ],
                        "title": "instant_payouts_promotion_config_param",
                        "type": "object"
                      },
                      "issuing_card": {
                        "properties": {
                          "enabled": {
                            "type": "boolean"
                          },
                          "features": {
                            "properties": {
                              "card_management": {
                                "type": "boolean"
                              },
                              "card_spend_dispute_management": {
                                "type": "boolean"
                              },
                              "cardholder_management": {
                                "type": "boolean"
                              },
                              "spend_control_management": {
                                "type": "boolean"
                              }
                            },
                            "title": "issuing_card_features_param",
                            "type": "object"
                          }
                        },
                        "required": [
                          "enabled"
                        ],
                        "title": "issuing_card_config_param",
                        "type": "object"
                      },
                      "issuing_cards_list": {
                        "properties": {
                          "enabled": {
                            "type": "boolean"
                          },
                          "features": {
                            "properties": {
                              "card_management": {
                                "type": "boolean"
                              },
                              "card_spend_dispute_management": {
                                "type": "boolean"
                              },
                              "cardholder_management": {
                                "type": "boolean"
                              },
                              "disable_stripe_user_authentication": {
                                "type": "boolean"
                              },
                              "spend_control_management": {
                                "type": "boolean"
                              }
                            },
                            "title": "issuing_cards_list_features_param",
                            "type": "object"
                          }
                        },
                        "required": [
                          "enabled"
                        ],
                        "title": "issuing_cards_list_config_param",
                        "type": "object"
                      },
                      "notification_banner": {
                        "properties": {
                          "enabled": {
                            "type": "boolean"
                          },
                          "features": {
                            "properties": {
                              "disable_stripe_user_authentication": {
                                "type": "boolean"
                              },
                              "external_account_collection": {
                                "type": "boolean"
                              }
                            },
                            "title": "account_features_param",
                            "type": "object"
                          }
                        },
                        "required": [
                          "enabled"
                        ],
                        "title": "account_config_param",
                        "type": "object"
                      },
                      "payment_details": {
                        "properties": {
                          "enabled": {
                            "type": "boolean"
                          },
                          "features": {
                            "properties": {
                              "capture_payments": {
                                "type": "boolean"
                              },
                              "destination_on_behalf_of_charge_management": {
                                "type": "boolean"
                              },
                              "dispute_management": {
                                "type": "boolean"
                              },
                              "refund_management": {
                                "type": "boolean"
                              }
                            },
                            "title": "payments_features_param",
                            "type": "object"
                          }
                        },
                        "required": [
                          "enabled"
                        ],
                        "title": "payments_config_param",
                        "type": "object"
                      },
                      "payment_disputes": {
                        "properties": {
                          "enabled": {
                            "type": "boolean"
                          },
                          "features": {
                            "properties": {
                              "destination_on_behalf_of_charge_management": {
                                "type": "boolean"
                              },
                              "dispute_management": {
                                "type": "boolean"
                              },
                              "refund_management": {
                                "type": "boolean"
                              }
                            },
                            "title": "payment_disputes_features_param",
                            "type": "object"
                          }
                        },
                        "required": [
                          "enabled"
                        ],
                        "title": "payment_disputes_config_param",
                        "type": "object"
                      },
                      "payments": {
                        "properties": {
                          "enabled": {
                            "type": "boolean"
                          },
                          "features": {
                            "properties": {
                              "capture_payments": {
                                "type": "boolean"
                              },
                              "destination_on_behalf_of_charge_management": {
                                "type": "boolean"
                              },
                              "dispute_management": {
                                "type": "boolean"
                              },
                              "refund_management": {
                                "type": "boolean"
                              }
                            },
                            "title": "payments_features_param",
                            "type": "object"
                          }
                        },
                        "required": [
                          "enabled"
                        ],
                        "title": "payments_config_param",
                        "type": "object"
                      },
                      "payouts": {
                        "properties": {
                          "enabled": {
                            "type": "boolean"
                          },
                          "features": {
                            "properties": {
                              "disable_stripe_user_authentication": {
                                "type": "boolean"
                              },
                              "edit_payout_schedule": {
                                "type": "boolean"
                              },
                              "external_account_collection": {
                                "type": "boolean"
                              },
                              "instant_payouts": {
                                "type": "boolean"
                              },
                              "standard_payouts": {
                                "type": "boolean"
                              }
                            },
                            "title": "payouts_features_param",
                            "type": "object"
                          }
                        },
                        "required": [
                          "enabled"
                        ],
                        "title": "payouts_config_param",
                        "type": "object"
                      },
                      "payouts_list": {
                        "properties": {
                          "enabled": {
                            "type": "boolean"
                          },
                          "features": {
                            "properties": {},
                            "title": "base_features_param",
                            "type": "object"
                          }
                        },
                        "required": [
                          "enabled"
                        ],
                        "title": "base_config_param",
                        "type": "object"
                      },
                      "tax_registrations": {
                        "properties": {
                          "enabled": {
                            "type": "boolean"
                          },
                          "features": {
                            "properties": {},
                            "title": "base_features_param",
                            "type": "object"
                          }
                        },
                        "required": [
                          "enabled"
                        ],
                        "title": "base_config_param",
                        "type": "object"
                      },
                      "tax_settings": {
                        "properties": {
                          "enabled": {
                            "type": "boolean"
                          },
                          "features": {
                            "properties": {},
                            "title": "base_features_param",
                            "type": "object"
                          }
                        },
                        "required": [
                          "enabled"
                        ],
                        "title": "base_config_param",
                        "type": "object"
                      }
                    },
                    "title": "account_session_create_components_param",
                    "type": "object"
                  },
                  "expand": {
                    "description": "Specifies which fields in the response should be expanded.",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "account",
                  "components"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account_session"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        },
        "summary": "Create an Account Session"
      }
    },
    "/v1/accounts": {
      "get": {
        "description": "<p>Returns a list of accounts connected to your platform via <a href=\"/docs/connect\">Connect</a>. If you’re not a platform, the list is empty.</p>",
        "operationId": "GetAccounts",
        "parameters": [
          {
            "description": "Only return connected accounts that were created during the given date interval.",
            "explode": true,
            "in": "query",
            "name": "created",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "properties": {
                    "gt": {
                      "type": "integer"
                    },
                    "gte": {
                      "type": "integer"
                    },
                    "lt": {
                      "type": "integer"
                    },
                    "lte": {
                      "type": "integer"
                    }
                  },
                  "title": "range_query_specs",
                  "type": "object"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "style": "deepObject"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "explode": true,
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "style": "deepObject"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/account"
                      },
                      "type": "array"
                    },
                    "has_more": {
                      "description": "True if this list has another page of items after this one that can be fetched.",
                      "type": "boolean"
                    },
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    },
                    "url": {
                      "description": "The URL where this list can be accessed.",
                      "maxLength": 5000,
                      "pattern": "^/v1/accounts",
                      "type": "string"
                    }
                  },
                  "required": [
                    "data",
                    "has_more",
                    "object",
                    "url"
                  ],
                  "title": "AccountList",
                  "type": "object",
                  "x-expandableFields": [
                    "data"
                  ]
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        },
        "summary": "List all connected accounts"
      },
      "post": {
        "description": "<p>With <a href=\"/docs/connect\">Connect</a>, you can create Stripe accounts for your users.\nTo do this, you’ll first need to <a href=\"https://dashboard.stripe.com/account/applications/settings\">register your platform</a>.</p>\n\n<p>If you’ve already collected information for your connected accounts, you <a href=\"/docs/connect/best-practices#onboarding\">can prefill that information</a> when\ncreating the account. Connect Onboarding won’t ask for the prefilled information during account onboarding.\nYou can prefill any information on the account.</p>",
        "operationId": "PostAccounts",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {
                "bank_account": {
                  "explode": true,
                  "style": "deepObject"
                },
                "business_profile": {
                  "explode": true,
                  "style": "deepObject"
                },
                "capabilities": {
                  "explode": true,
                  "style": "deepObject"
                },
                "company": {
                  "explode": true,
                  "style": "deepObject"
                },
                "controller": {
                  "explode": true,
                  "style": "deepObject"
                },
                "documents": {
                  "explode": true,
                  "style": "deepObject"
                },
                "expand": {
                  "explode": true,
                  "style": "deepObject"
                },
                "groups": {
                  "explode": true,
                  "style": "deepObject"
                },
                "individual": {
                  "explode": true,
                  "style": "deepObject"
                },
                "metadata": {
                  "explode": true,
                  "style": "deepObject"
                },
                "settings": {
                  "explode": true,
                  "style": "deepObject"
                },
                "tos_acceptance": {
                  "explode": true,
                  "style": "deepObject"
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "account_token": {
                    "description": "An [account token](https://stripe.com/docs/api#create_account_token), used to securely provide details to the account.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "bank_account": {
                    "anyOf": [
                      {
                        "properties": {
                          "account_holder_name": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "account_holder_type": {
                            "enum": [
                              "company",
                              "individual"
                            ],
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "account_number": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "account_type": {
                            "enum": [
                              "checking",
                              "futsu",
                              "savings",
                              "toza"
                            ],
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "country": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "currency": {
                            "format": "currency",
                            "type": "string"
                          },
                          "documents": {
                            "properties": {
                              "bank_account_ownership_verification": {
                                "properties": {
                                  "files": {
                                    "items": {
                                      "maxLength": 500,
                                      "type": "string"
                                    },
                                    "type": "array"
                                  }
                                },
                                "title": "documents_param",
                                "type": "object"
                              }
                            },
                            "title": "external_account_documents_param",
                            "type": "object"
                          },
                          "object": {
                            "enum": [
                              "bank_account"
                            ],
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "routing_number": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "required": [
                          "account_number",
                          "country"
                        ],
                        "title": "external_account_payout_bank_account",
                        "type": "object"
                      },
                      {
                        "maxLength": 5000,
                        "type": "string"
                      }
                    ],
                    "description": "Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/js), or a dictionary containing a user's bank account details."
                  },
                  "business_profile": {
                    "description": "Business information about the account.",
                    "properties": {
                      "annual_revenue": {
                        "properties": {
                          "amount": {
                            "type": "integer"
                          },
                          "currency": {
                            "format": "currency",
                            "type": "string"
                          },
                          "fiscal_year_end": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "required": [
                          "amount",
                          "currency",
                          "fiscal_year_end"
                        ],
                        "title": "annual_revenue_specs",
                        "type": "object"
                      },
                      "estimated_worker_count": {
                        "type": "integer"
                      },
                      "mcc": {
                        "maxLength": 4,
                        "type": "string"
                      },
                      "minority_owned_business_designation": {
                        "items": {
                          "enum": [
                            "lgbtqi_owned_business",
                            "minority_owned_business",
                            "none_of_these_apply",
                            "prefer_not_to_answer",
                            "women_owned_business"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "monthly_estimated_revenue": {
                        "properties": {
                          "amount": {
                            "type": "integer"
                          },
                          "currency": {
                            "format": "currency",
                            "type": "string"
                          }
                        },
                        "required": [
                          "amount",
                          "currency"
                        ],
                        "title": "monthly_estimated_revenue_specs",
                        "type": "object"
                      },
                      "name": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "product_description": {
                        "maxLength": 40000,
                        "type": "string"
                      },
                      "support_address": {
                        "properties": {
                          "city": {
                            "maxLength": 100,
                            "type": "string"
                          },
                          "country": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line1": {
                            "maxLength": 200,
                            "type": "string"
                          },
                          "line2": {
                            "maxLength": 200,
                            "type": "string"
                          },
                          "postal_code": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "state": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "address_specs",
                        "type": "object"
                      },
                      "support_email": {
                        "type": "string"
                      },
                      "support_phone": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "support_url": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "business_profile_specs",
                    "type": "object"
                  },
                  "business_type": {
                    "description": "The business type. Once you create an [Account Link](/api/account_links) or [Account Session](/api/account_sessions), this property can only be updated for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts.",
                    "enum": [
                      "company",
                      "government_entity",
                      "individual",
                      "non_profit"
                    ],
                    "type": "string",
                    "x-stripeBypassValidation": true
                  },
                  "capabilities": {
                    "description": "Each key of the dictionary represents a capability, and each capability\nmaps to its settings (for example, whether it has been requested or not). Each\ncapability is inactive until you have provided its specific\nrequirements and Stripe has verified them. An account might have some\nof its requested capabilities be active and some be inactive.\n\nRequired when [account.controller.stripe_dashboard.type](/api/accounts/create#create_account-controller-dashboard-type)\nis `none`, which includes Custom accounts.",
                    "properties": {
                      "acss_debit_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "affirm_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "afterpay_clearpay_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "alma_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "amazon_pay_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "au_becs_debit_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "bacs_debit_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "bancontact_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "bank_transfer_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "billie_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "blik_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "boleto_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "card_issuing": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "card_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "cartes_bancaires_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "cashapp_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "crypto_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "eps_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "fpx_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "gb_bank_transfer_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "giropay_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "grabpay_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "ideal_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "india_international_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "jcb_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "jp_bank_transfer_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "kakao_pay_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "klarna_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "konbini_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "kr_card_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "legacy_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "link_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "mobilepay_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "multibanco_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "mx_bank_transfer_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "naver_pay_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "nz_bank_account_becs_debit_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "oxxo_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "p24_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "pay_by_bank_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "payco_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "paynow_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "pix_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "promptpay_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "revolut_pay_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "samsung_pay_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "satispay_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "sepa_bank_transfer_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "sepa_debit_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "sofort_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "swish_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "tax_reporting_us_1099_k": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "tax_reporting_us_1099_misc": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "transfers": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "treasury": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "twint_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "us_bank_account_ach_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "us_bank_transfer_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "zip_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      }
                    },
                    "title": "capabilities_param",
                    "type": "object"
                  },
                  "company": {
                    "description": "Information about the company or business. This field is available for any `business_type`. Once you create an [Account Link](/api/account_links) or [Account Session](/api/account_sessions), this property can only be updated for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts.",
                    "properties": {
                      "address": {
                        "properties": {
                          "city": {
                            "maxLength": 100,
                            "type": "string"
                          },
                          "country": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line1": {
                            "maxLength": 200,
                            "type": "string"
                          },
                          "line2": {
                            "maxLength": 200,
                            "type": "string"
                          },
                          "postal_code": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "state": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "legal_entity_and_kyc_address_specs",
                        "type": "object"
                      },
                      "address_kana": {
                        "properties": {
                          "city": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "country": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line1": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line2": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "postal_code": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "state": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "town": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "japan_address_kana_specs",
                        "type": "object"
                      },
                      "address_kanji": {
                        "properties": {
                          "city": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "country": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line1": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line2": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "postal_code": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "state": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "town": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "japan_address_kanji_specs",
                        "type": "object"
                      },
                      "directors_provided": {
                        "type": "boolean"
                      },
                      "directorship_declaration": {
                        "properties": {
                          "date": {
                            "format": "unix-time",
                            "type": "integer"
                          },
                          "ip": {
                            "type": "string"
                          },
                          "user_agent": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "company_directorship_declaration",
                        "type": "object"
                      },
                      "executives_provided": {
                        "type": "boolean"
                      },
                      "export_license_id": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "export_purpose_code": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "name": {
                        "maxLength": 100,
                        "type": "string"
                      },
                      "name_kana": {
                        "maxLength": 100,
                        "type": "string"
                      },
                      "name_kanji": {
                        "maxLength": 100,
                        "type": "string"
                      },
                      "owners_provided": {
                        "type": "boolean"
                      },
                      "ownership_declaration": {
                        "properties": {
                          "date": {
                            "format": "unix-time",
                            "type": "integer"
                          },
                          "ip": {
                            "type": "string"
                          },
                          "user_agent": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "company_ownership_declaration",
                        "type": "object"
                      },
                      "ownership_exemption_reason": {
                        "enum": [
                          "",
                          "qualified_entity_exceeds_ownership_threshold",
                          "qualifies_as_financial_institution"
                        ],
                        "type": "string"
                      },
                      "phone": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "registration_date": {
                        "anyOf": [
                          {
                            "properties": {
                              "day": {
                                "type": "integer"
                              },
                              "month": {
                                "type": "integer"
                              },
                              "year": {
                                "type": "integer"
                              }
                            },
                            "required": [
                              "day",
                              "month",
                              "year"
                            ],
                            "title": "registration_date_specs",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "registration_number": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "structure": {
                        "enum": [
                          "",
                          "free_zone_establishment",
                          "free_zone_llc",
                          "government_instrumentality",
                          "governmental_unit",
                          "incorporated_non_profit",
                          "incorporated_partnership",
                          "limited_liability_partnership",
                          "llc",
                          "multi_member_llc",
                          "private_company",
                          "private_corporation",
                          "private_partnership",
                          "public_company",
                          "public_corporation",
                          "public_partnership",
                          "registered_charity",
                          "single_member_llc",
                          "sole_establishment",
                          "sole_proprietorship",
                          "tax_exempt_government_instrumentality",
                          "unincorporated_association",
                          "unincorporated_non_profit",
                          "unincorporated_partnership"
                        ],
                        "type": "string",
                        "x-stripeBypassValidation": true
                      },
                      "tax_id": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "tax_id_registrar": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "vat_id": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "verification": {
                        "properties": {
                          "document": {
                            "properties": {
                              "back": {
                                "maxLength": 500,
                                "type": "string"
                              },
                              "front": {
                                "maxLength": 500,
                                "type": "string"
                              }
                            },
                            "title": "verification_document_specs",
                            "type": "object"
                          }
                        },
                        "title": "verification_specs",
                        "type": "object"
                      }
                    },
                    "title": "company_specs",
                    "type": "object"
                  },
                  "controller": {
                    "description": "A hash of configuration describing the account controller's attributes.",
                    "properties": {
                      "fees": {
                        "properties": {
                          "payer": {
                            "enum": [
                              "account",
                              "application"
                            ],
                            "type": "string"
                          }
                        },
                        "title": "controller_fees_specs",
                        "type": "object"
                      },
                      "losses": {
                        "properties": {
                          "payments": {
                            "enum": [
                              "application",
                              "stripe"
                            ],
                            "type": "string"
                          }
                        },
                        "title": "controller_losses_specs",
                        "type": "object"
                      },
                      "requirement_collection": {
                        "enum": [
                          "application",
                          "stripe"
                        ],
                        "type": "string"
                      },
                      "stripe_dashboard": {
                        "properties": {
                          "type": {
                            "enum": [
                              "express",
                              "full",
                              "none"
                            ],
                            "type": "string"
                          }
                        },
                        "title": "controller_dashboard_specs",
                        "type": "object"
                      }
                    },
                    "title": "controller_specs",
                    "type": "object"
                  },
                  "country": {
                    "description": "The country in which the account holder resides, or in which the business is legally established. This should be an ISO 3166-1 alpha-2 country code. For example, if you are in the United States and the business for which you're creating an account is legally represented in Canada, you would use `CA` as the country for the account being created. Available countries include [Stripe's global markets](https://stripe.com/global) as well as countries where [cross-border payouts](https://stripe.com/docs/connect/cross-border-payouts) are supported.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "default_currency": {
                    "description": "Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://docs.stripe.com/payouts).",
                    "format": "currency",
                    "type": "string"
                  },
                  "documents": {
                    "description": "Documents that may be submitted to satisfy various informational requests.",
                    "properties": {
                      "bank_account_ownership_verification": {
                        "properties": {
                          "files": {
                            "items": {
                              "maxLength": 500,
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      },
                      "company_license": {
                        "properties": {
                          "files": {
                            "items": {
                              "maxLength": 500,
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      },
                      "company_memorandum_of_association": {
                        "properties": {
                          "files": {
                            "items": {
                              "maxLength": 500,
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      },
                      "company_ministerial_decree": {
                        "properties": {
                          "files": {
                            "items": {
                              "maxLength": 500,
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      },
                      "company_registration_verification": {
                        "properties": {
                          "files": {
                            "items": {
                              "maxLength": 500,
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      },
                      "company_tax_id_verification": {
                        "properties": {
                          "files": {
                            "items": {
                              "maxLength": 500,
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      },
                      "proof_of_address": {
                        "properties": {
                          "files": {
                            "items": {
                              "maxLength": 500,
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      },
                      "proof_of_registration": {
                        "properties": {
                          "files": {
                            "items": {
                              "maxLength": 500,
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      },
                      "proof_of_ultimate_beneficial_ownership": {
                        "properties": {
                          "files": {
                            "items": {
                              "maxLength": 500,
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      }
                    },
                    "title": "documents_specs",
                    "type": "object"
                  },
                  "email": {
                    "description": "The email address of the account holder. This is only to make the account easier to identify to you. If [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts, Stripe doesn't email the account without your consent.",
                    "type": "string"
                  },
                  "expand": {
                    "description": "Specifies which fields in the response should be expanded.",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "external_account": {
                    "description": "A card or bank account to attach to the account for receiving [payouts](/connect/bank-debit-card-payouts) (you won’t be able to use it for top-ups). You can provide either a token, like the ones returned by [Stripe.js](/js), or a dictionary, as documented in the `external_account` parameter for [bank account](/api#account_create_bank_account) creation. <br><br>By default, providing an external account sets it as the new default external account for its currency, and deletes the old default if one exists. To add additional external accounts without replacing the existing default for the currency, use the [bank account](/api#account_create_bank_account) or [card creation](/api#account_create_card) APIs. After you create an [Account Link](/api/account_links) or [Account Session](/api/account_sessions), this property can only be updated for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts.",
                    "maxLength": 5000,
                    "type": "string",
                    "x-stripeBypassValidation": true
                  },
                  "groups": {
                    "description": "A hash of account group type to tokens. These are account groups this account should be added to.",
                    "properties": {
                      "payments_pricing": {
                        "anyOf": [
                          {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "title": "account_groups_specs",
                    "type": "object"
                  },
                  "individual": {
                    "description": "Information about the person represented by the account. This field is null unless `business_type` is set to `individual`. Once you create an [Account Link](/api/account_links) or [Account Session](/api/account_sessions), this property can only be updated for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts.",
                    "properties": {
                      "address": {
                        "properties": {
                          "city": {
                            "maxLength": 100,
                            "type": "string"
                          },
                          "country": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line1": {
                            "maxLength": 200,
                            "type": "string"
                          },
                          "line2": {
                            "maxLength": 200,
                            "type": "string"
                          },
                          "postal_code": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "state": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "address_specs",
                        "type": "object"
                      },
                      "address_kana": {
                        "properties": {
                          "city": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "country": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line1": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line2": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "postal_code": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "state": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "town": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "japan_address_kana_specs",
                        "type": "object"
                      },
                      "address_kanji": {
                        "properties": {
                          "city": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "country": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line1": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line2": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "postal_code": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "state": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "town": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "japan_address_kanji_specs",
                        "type": "object"
                      },
                      "dob": {
                        "anyOf": [
                          {
                            "properties": {
                              "day": {
                                "type": "integer"
                              },
                              "month": {
                                "type": "integer"
                              },
                              "year": {
                                "type": "integer"
                              }
                            },
                            "required": [
                              "day",
                              "month",
                              "year"
                            ],
                            "title": "date_of_birth_specs",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "email": {
                        "type": "string"
                      },
                      "first_name": {
                        "maxLength": 100,
                        "type": "string"
                      },
                      "first_name_kana": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "first_name_kanji": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "full_name_aliases": {
                        "anyOf": [
                          {
                            "items": {
                              "maxLength": 300,
                              "type": "string"
                            },
                            "type": "array"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "gender": {
                        "type": "string"
                      },
                      "id_number": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "id_number_secondary": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "last_name": {
                        "maxLength": 100,
                        "type": "string"
                      },
                      "last_name_kana": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "last_name_kanji": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "maiden_name": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "metadata": {
                        "anyOf": [
                          {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "phone": {
                        "type": "string"
                      },
                      "political_exposure": {
                        "enum": [
                          "existing",
                          "none"
                        ],
                        "type": "string"
                      },
                      "registered_address": {
                        "properties": {
                          "city": {
                            "maxLength": 100,
                            "type": "string"
                          },
                          "country": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line1": {
                            "maxLength": 200,
                            "type": "string"
                          },
                          "line2": {
                            "maxLength": 200,
                            "type": "string"
                          },
                          "postal_code": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "state": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "address_specs",
                        "type": "object"
                      },
                      "relationship": {
                        "properties": {
                          "director": {
                            "type": "boolean"
                          },
                          "executive": {
                            "type": "boolean"
                          },
                          "owner": {
                            "type": "boolean"
                          },
                          "percent_ownership": {
                            "anyOf": [
                              {
                                "type": "number"
                              },
                              {
                                "enum": [
                                  ""
                                ],
                                "type": "string"
                              }
                            ]
                          },
                          "title": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "individual_relationship_specs",
                        "type": "object"
                      },
                      "ssn_last_4": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "verification": {
                        "properties": {
                          "additional_document": {
                            "properties": {
                              "back": {
                                "maxLength": 500,
                                "type": "string"
                              },
                              "front": {
                                "maxLength": 500,
                                "type": "string"
                              }
                            },
                            "title": "person_verification_document_specs",
                            "type": "object"
                          },
                          "document": {
                            "properties": {
                              "back": {
                                "maxLength": 500,
                                "type": "string"
                              },
                              "front": {
                                "maxLength": 500,
                                "type": "string"
                              }
                            },
                            "title": "person_verification_document_specs",
                            "type": "object"
                          }
                        },
                        "title": "person_verification_specs",
                        "type": "object"
                      }
                    },
                    "title": "individual_specs",
                    "type": "object"
                  },
                  "metadata": {
                    "anyOf": [
                      {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "type": "object"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`."
                  },
                  "settings": {
                    "description": "Options for customizing how the account functions within Stripe.",
                    "properties": {
                      "bacs_debit_payments": {
                        "properties": {
                          "display_name": {
                            "type": "string"
                          }
                        },
                        "title": "bacs_debit_payments_specs",
                        "type": "object"
                      },
                      "branding": {
                        "properties": {
                          "icon": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "logo": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "primary_color": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "secondary_color": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "branding_settings_specs",
                        "type": "object"
                      },
                      "card_issuing": {
                        "properties": {
                          "tos_acceptance": {
                            "properties": {
                              "date": {
                                "format": "unix-time",
                                "type": "integer"
                              },
                              "ip": {
                                "type": "string"
                              },
                              "user_agent": {
                                "anyOf": [
                                  {
                                    "maxLength": 5000,
                                    "type": "string"
                                  },
                                  {
                                    "enum": [
                                      ""
                                    ],
                                    "type": "string"
                                  }
                                ]
                              }
                            },
                            "title": "settings_terms_of_service_specs",
                            "type": "object"
                          }
                        },
                        "title": "card_issuing_settings_specs",
                        "type": "object"
                      },
                      "card_payments": {
                        "properties": {
                          "decline_on": {
                            "properties": {
                              "avs_failure": {
                                "type": "boolean"
                              },
                              "cvc_failure": {
                                "type": "boolean"
                              }
                            },
                            "title": "decline_charge_on_specs",
                            "type": "object"
                          },
                          "statement_descriptor_prefix": {
                            "maxLength": 10,
                            "type": "string"
                          },
                          "statement_descriptor_prefix_kana": {
                            "anyOf": [
                              {
                                "maxLength": 10,
                                "type": "string"
                              },
                              {
                                "enum": [
                                  ""
                                ],
                                "type": "string"
                              }
                            ]
                          },
                          "statement_descriptor_prefix_kanji": {
                            "anyOf": [
                              {
                                "maxLength": 10,
                                "type": "string"
                              },
                              {
                                "enum": [
                                  ""
                                ],
                                "type": "string"
                              }
                            ]
                          }
                        },
                        "title": "card_payments_settings_specs",
                        "type": "object"
                      },
                      "invoices": {
                        "properties": {
                          "hosted_payment_method_save": {
                            "enum": [
                              "always",
                              "never",
                              "offer"
                            ],
                            "type": "string"
                          }
                        },
                        "title": "invoices_settings_specs_create",
                        "type": "object"
                      },
                      "payments": {
                        "properties": {
                          "statement_descriptor": {
                            "maxLength": 22,
                            "type": "string"
                          },
                          "statement_descriptor_kana": {
                            "maxLength": 22,
                            "type": "string"
                          },
                          "statement_descriptor_kanji": {
                            "maxLength": 22,
                            "type": "string"
                          }
                        },
                        "title": "payments_settings_specs",
                        "type": "object"
                      },
                      "payouts": {
                        "properties": {
                          "debit_negative_balances": {
                            "type": "boolean"
                          },
                          "schedule": {
                            "properties": {
                              "delay_days": {
                                "anyOf": [
                                  {
                                    "enum": [
                                      "minimum"
                                    ],
                                    "maxLength": 5000,
                                    "type": "string"
                                  },
                                  {
                                    "type": "integer"
                                  }
                                ]
                              },
                              "interval": {
                                "enum": [
                                  "daily",
                                  "manual",
                                  "monthly",
                                  "weekly"
                                ],
                                "maxLength": 5000,
                                "type": "string",
                                "x-stripeBypassValidation": true
                              },
                              "monthly_anchor": {
                                "type": "integer"
                              },
                              "monthly_payout_days": {
                                "items": {
                                  "type": "integer"
                                },
                                "type": "array"
                              },
                              "weekly_anchor": {
                                "enum": [
                                  "friday",
                                  "monday",
                                  "saturday",
                                  "sunday",
                                  "thursday",
                                  "tuesday",
                                  "wednesday"
                                ],
                                "maxLength": 5000,
                                "type": "string"
                              },
                              "weekly_payout_days": {
                                "items": {
                                  "enum": [
                                    "friday",
                                    "monday",
                                    "saturday",
                                    "sunday",
                                    "thursday",
                                    "tuesday",
                                    "wednesday"
                                  ],
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            },
                            "title": "transfer_schedule_specs",
                            "type": "object"
                          },
                          "statement_descriptor": {
                            "maxLength": 22,
                            "type": "string"
                          }
                        },
                        "title": "payout_settings_specs",
                        "type": "object"
                      },
                      "treasury": {
                        "properties": {
                          "tos_acceptance": {
                            "properties": {
                              "date": {
                                "format": "unix-time",
                                "type": "integer"
                              },
                              "ip": {
                                "type": "string"
                              },
                              "user_agent": {
                                "anyOf": [
                                  {
                                    "maxLength": 5000,
                                    "type": "string"
                                  },
                                  {
                                    "enum": [
                                      ""
                                    ],
                                    "type": "string"
                                  }
                                ]
                              }
                            },
                            "title": "settings_terms_of_service_specs",
                            "type": "object"
                          }
                        },
                        "title": "treasury_settings_specs",
                        "type": "object"
                      }
                    },
                    "title": "settings_specs",
                    "type": "object"
                  },
                  "tos_acceptance": {
                    "description": "Details on the account's acceptance of the [Stripe Services Agreement](/connect/updating-accounts#tos-acceptance). This property can only be updated for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts. This property defaults to a `full` service agreement when empty.",
                    "properties": {
                      "date": {
                        "format": "unix-time",
                        "type": "integer"
                      },
                      "ip": {
                        "type": "string"
                      },
                      "service_agreement": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "user_agent": {
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "title": "tos_acceptance_specs",
                    "type": "object"
                  },
                  "type": {
                    "description": "The type of Stripe account to create. May be one of `custom`, `express` or `standard`.",
                    "enum": [
                      "custom",
                      "express",
                      "standard"
                    ],
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        }
      }
    },
    "/v1/accounts/{account}": {
      "delete": {
        "description": "<p>With <a href=\"/connect\">Connect</a>, you can delete accounts you manage.</p>\n\n<p>Test-mode accounts can be deleted at any time.</p>\n\n<p>Live-mode accounts that have access to the standard dashboard and Stripe is responsible for negative account balances cannot be deleted, which includes Standard accounts. All other Live-mode accounts, can be deleted when all <a href=\"/api/balance/balance_object\">balances</a> are zero.</p>\n\n<p>If you want to delete your own account, use the <a href=\"https://dashboard.stripe.com/settings/account\">account information tab in your account settings</a> instead.</p>",
        "operationId": "DeleteAccountsAccount",
        "parameters": [
          {
            "in": "path",
            "name": "account",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleted_account"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        },
        "summary": "Delete an account"
      },
      "get": {
        "description": "<p>Retrieves the details of an account.</p>",
        "operationId": "GetAccountsAccount",
        "parameters": [
          {
            "in": "path",
            "name": "account",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "explode": true,
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "style": "deepObject"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        },
        "summary": "Retrieve account"
      },
      "post": {
        "description": "<p>Updates a <a href=\"/connect/accounts\">connected account</a> by setting the values of the parameters passed. Any parameters not provided are\nleft unchanged.</p>\n\n<p>For accounts where <a href=\"/api/accounts/object#account_object-controller-requirement_collection\">controller.requirement_collection</a>\nis <code>application</code>, which includes Custom accounts, you can update any information on the account.</p>\n\n<p>For accounts where <a href=\"/api/accounts/object#account_object-controller-requirement_collection\">controller.requirement_collection</a>\nis <code>stripe</code>, which includes Standard and Express accounts, you can update all information until you create\nan <a href=\"/api/account_links\">Account Link</a> or <a href=\"/api/account_sessions\">Account Session</a> to start Connect onboarding,\nafter which some properties can no longer be updated.</p>\n\n<p>To update your own account, use the <a href=\"https://dashboard.stripe.com/settings/account\">Dashboard</a>. Refer to our\n<a href=\"/docs/connect/updating-accounts\">Connect</a> documentation to learn more about updating accounts.</p>",
        "operationId": "PostAccountsAccount",
        "parameters": [
          {
            "in": "path",
            "name": "account",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {
                "business_profile": {
                  "explode": true,
                  "style": "deepObject"
                },
                "capabilities": {
                  "explode": true,
                  "style": "deepObject"
                },
                "company": {
                  "explode": true,
                  "style": "deepObject"
                },
                "documents": {
                  "explode": true,
                  "style": "deepObject"
                },
                "expand": {
                  "explode": true,
                  "style": "deepObject"
                },
                "groups": {
                  "explode": true,
                  "style": "deepObject"
                },
                "individual": {
                  "explode": true,
                  "style": "deepObject"
                },
                "metadata": {
                  "explode": true,
                  "style": "deepObject"
                },
                "settings": {
                  "explode": true,
                  "style": "deepObject"
                },
                "tos_acceptance": {
                  "explode": true,
                  "style": "deepObject"
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "account_token": {
                    "description": "An [account token](https://stripe.com/docs/api#create_account_token), used to securely provide details to the account.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "business_profile": {
                    "description": "Business information about the account.",
                    "properties": {
                      "annual_revenue": {
                        "properties": {
                          "amount": {
                            "type": "integer"
                          },
                          "currency": {
                            "format": "currency",
                            "type": "string"
                          },
                          "fiscal_year_end": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "required": [
                          "amount",
                          "currency",
                          "fiscal_year_end"
                        ],
                        "title": "annual_revenue_specs",
                        "type": "object"
                      },
                      "estimated_worker_count": {
                        "type": "integer"
                      },
                      "mcc": {
                        "maxLength": 4,
                        "type": "string"
                      },
                      "minority_owned_business_designation": {
                        "items": {
                          "enum": [
                            "lgbtqi_owned_business",
                            "minority_owned_business",
                            "none_of_these_apply",
                            "prefer_not_to_answer",
                            "women_owned_business"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "monthly_estimated_revenue": {
                        "properties": {
                          "amount": {
                            "type": "integer"
                          },
                          "currency": {
                            "format": "currency",
                            "type": "string"
                          }
                        },
                        "required": [
                          "amount",
                          "currency"
                        ],
                        "title": "monthly_estimated_revenue_specs",
                        "type": "object"
                      },
                      "name": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "product_description": {
                        "maxLength": 40000,
                        "type": "string"
                      },
                      "support_address": {
                        "properties": {
                          "city": {
                            "maxLength": 100,
                            "type": "string"
                          },
                          "country": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line1": {
                            "maxLength": 200,
                            "type": "string"
                          },
                          "line2": {
                            "maxLength": 200,
                            "type": "string"
                          },
                          "postal_code": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "state": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "address_specs",
                        "type": "object"
                      },
                      "support_email": {
                        "type": "string"
                      },
                      "support_phone": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "support_url": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "business_profile_update_specs",
                    "type": "object"
                  },
                  "business_type": {
                    "description": "The business type. Once you create an [Account Link](/api/account_links) or [Account Session](/api/account_sessions), this property can only be updated for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts.",
                    "enum": [
                      "company",
                      "government_entity",
                      "individual",
                      "non_profit"
                    ],
                    "type": "string",
                    "x-stripeBypassValidation": true
                  },
                  "capabilities": {
                    "description": "Each key of the dictionary represents a capability, and each capability\nmaps to its settings (for example, whether it has been requested or not). Each\ncapability is inactive until you have provided its specific\nrequirements and Stripe has verified them. An account might have some\nof its requested capabilities be active and some be inactive.\n\nRequired when [account.controller.stripe_dashboard.type](/api/accounts/create#create_account-controller-dashboard-type)\nis `none`, which includes Custom accounts.",
                    "properties": {
                      "acss_debit_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "affirm_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "afterpay_clearpay_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "alma_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "amazon_pay_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "au_becs_debit_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "bacs_debit_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "bancontact_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "bank_transfer_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "billie_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "blik_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "boleto_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "card_issuing": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "card_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "cartes_bancaires_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "cashapp_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "crypto_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "eps_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "fpx_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "gb_bank_transfer_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "giropay_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "grabpay_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "ideal_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "india_international_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "jcb_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "jp_bank_transfer_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "kakao_pay_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "klarna_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "konbini_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "kr_card_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "legacy_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "link_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "mobilepay_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "multibanco_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "mx_bank_transfer_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "naver_pay_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "nz_bank_account_becs_debit_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "oxxo_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "p24_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "pay_by_bank_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "payco_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "paynow_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "pix_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "promptpay_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "revolut_pay_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "samsung_pay_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "satispay_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "sepa_bank_transfer_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "sepa_debit_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "sofort_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "swish_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "tax_reporting_us_1099_k": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "tax_reporting_us_1099_misc": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "transfers": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "treasury": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "twint_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "us_bank_account_ach_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "us_bank_transfer_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "zip_payments": {
                        "properties": {
                          "requested": {
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      }
                    },
                    "title": "capabilities_param",
                    "type": "object"
                  },
                  "company": {
                    "description": "Information about the company or business. This field is available for any `business_type`. Once you create an [Account Link](/api/account_links) or [Account Session](/api/account_sessions), this property can only be updated for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts.",
                    "properties": {
                      "address": {
                        "properties": {
                          "city": {
                            "maxLength": 100,
                            "type": "string"
                          },
                          "country": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line1": {
                            "maxLength": 200,
                            "type": "string"
                          },
                          "line2": {
                            "maxLength": 200,
                            "type": "string"
                          },
                          "postal_code": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "state": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "legal_entity_and_kyc_address_specs",
                        "type": "object"
                      },
                      "address_kana": {
                        "properties": {
                          "city": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "country": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line1": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line2": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "postal_code": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "state": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "town": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "japan_address_kana_specs",
                        "type": "object"
                      },
                      "address_kanji": {
                        "properties": {
                          "city": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "country": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line1": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line2": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "postal_code": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "state": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "town": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "japan_address_kanji_specs",
                        "type": "object"
                      },
                      "directors_provided": {
                        "type": "boolean"
                      },
                      "directorship_declaration": {
                        "properties": {
                          "date": {
                            "format": "unix-time",
                            "type": "integer"
                          },
                          "ip": {
                            "type": "string"
                          },
                          "user_agent": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "company_directorship_declaration",
                        "type": "object"
                      },
                      "executives_provided": {
                        "type": "boolean"
                      },
                      "export_license_id": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "export_purpose_code": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "name": {
                        "maxLength": 100,
                        "type": "string"
                      },
                      "name_kana": {
                        "maxLength": 100,
                        "type": "string"
                      },
                      "name_kanji": {
                        "maxLength": 100,
                        "type": "string"
                      },
                      "owners_provided": {
                        "type": "boolean"
                      },
                      "ownership_declaration": {
                        "properties": {
                          "date": {
                            "format": "unix-time",
                            "type": "integer"
                          },
                          "ip": {
                            "type": "string"
                          },
                          "user_agent": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "company_ownership_declaration",
                        "type": "object"
                      },
                      "ownership_exemption_reason": {
                        "enum": [
                          "",
                          "qualified_entity_exceeds_ownership_threshold",
                          "qualifies_as_financial_institution"
                        ],
                        "type": "string"
                      },
                      "phone": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "registration_date": {
                        "anyOf": [
                          {
                            "properties": {
                              "day": {
                                "type": "integer"
                              },
                              "month": {
                                "type": "integer"
                              },
                              "year": {
                                "type": "integer"
                              }
                            },
                            "required": [
                              "day",
                              "month",
                              "year"
                            ],
                            "title": "registration_date_specs",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "registration_number": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "structure": {
                        "enum": [
                          "",
                          "free_zone_establishment",
                          "free_zone_llc",
                          "government_instrumentality",
                          "governmental_unit",
                          "incorporated_non_profit",
                          "incorporated_partnership",
                          "limited_liability_partnership",
                          "llc",
                          "multi_member_llc",
                          "private_company",
                          "private_corporation",
                          "private_partnership",
                          "public_company",
                          "public_corporation",
                          "public_partnership",
                          "registered_charity",
                          "single_member_llc",
                          "sole_establishment",
                          "sole_proprietorship",
                          "tax_exempt_government_instrumentality",
                          "unincorporated_association",
                          "unincorporated_non_profit",
                          "unincorporated_partnership"
                        ],
                        "type": "string",
                        "x-stripeBypassValidation": true
                      },
                      "tax_id": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "tax_id_registrar": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "vat_id": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "verification": {
                        "properties": {
                          "document": {
                            "properties": {
                              "back": {
                                "maxLength": 500,
                                "type": "string"
                              },
                              "front": {
                                "maxLength": 500,
                                "type": "string"
                              }
                            },
                            "title": "verification_document_specs",
                            "type": "object"
                          }
                        },
                        "title": "verification_specs",
                        "type": "object"
                      }
                    },
                    "title": "company_update_specs",
                    "type": "object"
                  },
                  "default_currency": {
                    "description": "Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://docs.stripe.com/payouts).",
                    "format": "currency",
                    "type": "string"
                  },
                  "documents": {
                    "description": "Documents that may be submitted to satisfy various informational requests.",
                    "properties": {
                      "bank_account_ownership_verification": {
                        "properties": {
                          "files": {
                            "items": {
                              "maxLength": 500,
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      },
                      "company_license": {
                        "properties": {
                          "files": {
                            "items": {
                              "maxLength": 500,
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      },
                      "company_memorandum_of_association": {
                        "properties": {
                          "files": {
                            "items": {
                              "maxLength": 500,
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      },
                      "company_ministerial_decree": {
                        "properties": {
                          "files": {
                            "items": {
                              "maxLength": 500,
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      },
                      "company_registration_verification": {
                        "properties": {
                          "files": {
                            "items": {
                              "maxLength": 500,
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      },
                      "company_tax_id_verification": {
                        "properties": {
                          "files": {
                            "items": {
                              "maxLength": 500,
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      },
                      "proof_of_address": {
                        "properties": {
                          "files": {
                            "items": {
                              "maxLength": 500,
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      },
                      "proof_of_registration": {
                        "properties": {
                          "files": {
                            "items": {
                              "maxLength": 500,
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      },
                      "proof_of_ultimate_beneficial_ownership": {
                        "properties": {
                          "files": {
                            "items": {
                              "maxLength": 500,
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      }
                    },
                    "title": "documents_specs",
                    "type": "object"
                  },
                  "email": {
                    "description": "The email address of the account holder. This is only to make the account easier to identify to you. If [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts, Stripe doesn't email the account without your consent.",
                    "type": "string"
                  },
                  "expand": {
                    "description": "Specifies which fields in the response should be expanded.",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "external_account": {
                    "description": "A card or bank account to attach to the account for receiving [payouts](/connect/bank-debit-card-payouts) (you won’t be able to use it for top-ups). You can provide either a token, like the ones returned by [Stripe.js](/js), or a dictionary, as documented in the `external_account` parameter for [bank account](/api#account_create_bank_account) creation. <br><br>By default, providing an external account sets it as the new default external account for its currency, and deletes the old default if one exists. To add additional external accounts without replacing the existing default for the currency, use the [bank account](/api#account_create_bank_account) or [card creation](/api#account_create_card) APIs. After you create an [Account Link](/api/account_links) or [Account Session](/api/account_sessions), this property can only be updated for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts.",
                    "maxLength": 5000,
                    "type": "string",
                    "x-stripeBypassValidation": true
                  },
                  "groups": {
                    "description": "A hash of account group type to tokens. These are account groups this account should be added to.",
                    "properties": {
                      "payments_pricing": {
                        "anyOf": [
                          {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "title": "account_groups_specs",
                    "type": "object"
                  },
                  "individual": {
                    "description": "Information about the person represented by the account. This field is null unless `business_type` is set to `individual`. Once you create an [Account Link](/api/account_links) or [Account Session](/api/account_sessions), this property can only be updated for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts.",
                    "properties": {
                      "address": {
                        "properties": {
                          "city": {
                            "maxLength": 100,
                            "type": "string"
                          },
                          "country": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line1": {
                            "maxLength": 200,
                            "type": "string"
                          },
                          "line2": {
                            "maxLength": 200,
                            "type": "string"
                          },
                          "postal_code": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "state": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "address_specs",
                        "type": "object"
                      },
                      "address_kana": {
                        "properties": {
                          "city": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "country": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line1": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line2": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "postal_code": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "state": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "town": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "japan_address_kana_specs",
                        "type": "object"
                      },
                      "address_kanji": {
                        "properties": {
                          "city": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "country": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line1": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line2": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "postal_code": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "state": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "town": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "japan_address_kanji_specs",
                        "type": "object"
                      },
                      "dob": {
                        "anyOf": [
                          {
                            "properties": {
                              "day": {
                                "type": "integer"
                              },
                              "month": {
                                "type": "integer"
                              },
                              "year": {
                                "type": "integer"
                              }
                            },
                            "required": [
                              "day",
                              "month",
                              "year"
                            ],
                            "title": "date_of_birth_specs",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "email": {
                        "type": "string"
                      },
                      "first_name": {
                        "maxLength": 100,
                        "type": "string"
                      },
                      "first_name_kana": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "first_name_kanji": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "full_name_aliases": {
                        "anyOf": [
                          {
                            "items": {
                              "maxLength": 300,
                              "type": "string"
                            },
                            "type": "array"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "gender": {
                        "type": "string"
                      },
                      "id_number": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "id_number_secondary": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "last_name": {
                        "maxLength": 100,
                        "type": "string"
                      },
                      "last_name_kana": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "last_name_kanji": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "maiden_name": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "metadata": {
                        "anyOf": [
                          {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "phone": {
                        "type": "string"
                      },
                      "political_exposure": {
                        "enum": [
                          "existing",
                          "none"
                        ],
                        "type": "string"
                      },
                      "registered_address": {
                        "properties": {
                          "city": {
                            "maxLength": 100,
                            "type": "string"
                          },
                          "country": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line1": {
                            "maxLength": 200,
                            "type": "string"
                          },
                          "line2": {
                            "maxLength": 200,
                            "type": "string"
                          },
                          "postal_code": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "state": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "address_specs",
                        "type": "object"
                      },
                      "relationship": {
                        "properties": {
                          "director": {
                            "type": "boolean"
                          },
                          "executive": {
                            "type": "boolean"
                          },
                          "owner": {
                            "type": "boolean"
                          },
                          "percent_ownership": {
                            "anyOf": [
                              {
                                "type": "number"
                              },
                              {
                                "enum": [
                                  ""
                                ],
                                "type": "string"
                              }
                            ]
                          },
                          "title": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "individual_relationship_specs",
                        "type": "object"
                      },
                      "ssn_last_4": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "verification": {
                        "properties": {
                          "additional_document": {
                            "properties": {
                              "back": {
                                "maxLength": 500,
                                "type": "string"
                              },
                              "front": {
                                "maxLength": 500,
                                "type": "string"
                              }
                            },
                            "title": "person_verification_document_specs",
                            "type": "object"
                          },
                          "document": {
                            "properties": {
                              "back": {
                                "maxLength": 500,
                                "type": "string"
                              },
                              "front": {
                                "maxLength": 500,
                                "type": "string"
                              }
                            },
                            "title": "person_verification_document_specs",
                            "type": "object"
                          }
                        },
                        "title": "person_verification_specs",
                        "type": "object"
                      }
                    },
                    "title": "individual_update_specs",
                    "type": "object"
                  },
                  "metadata": {
                    "anyOf": [
                      {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "type": "object"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`."
                  },
                  "settings": {
                    "description": "Options for customizing how the account functions within Stripe.",
                    "properties": {
                      "bacs_debit_payments": {
                        "properties": {
                          "display_name": {
                            "type": "string"
                          }
                        },
                        "title": "bacs_debit_payments_specs",
                        "type": "object"
                      },
                      "branding": {
                        "properties": {
                          "icon": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "logo": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "primary_color": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "secondary_color": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "branding_settings_specs",
                        "type": "object"
                      },
                      "card_issuing": {
                        "properties": {
                          "tos_acceptance": {
                            "properties": {
                              "date": {
                                "format": "unix-time",
                                "type": "integer"
                              },
                              "ip": {
                                "type": "string"
                              },
                              "user_agent": {
                                "anyOf": [
                                  {
                                    "maxLength": 5000,
                                    "type": "string"
                                  },
                                  {
                                    "enum": [
                                      ""
                                    ],
                                    "type": "string"
                                  }
                                ]
                              }
                            },
                            "title": "settings_terms_of_service_specs",
                            "type": "object"
                          }
                        },
                        "title": "card_issuing_settings_specs",
                        "type": "object"
                      },
                      "card_payments": {
                        "properties": {
                          "decline_on": {
                            "properties": {
                              "avs_failure": {
                                "type": "boolean"
                              },
                              "cvc_failure": {
                                "type": "boolean"
                              }
                            },
                            "title": "decline_charge_on_specs",
                            "type": "object"
                          },
                          "statement_descriptor_prefix": {
                            "maxLength": 10,
                            "type": "string"
                          },
                          "statement_descriptor_prefix_kana": {
                            "anyOf": [
                              {
                                "maxLength": 10,
                                "type": "string"
                              },
                              {
                                "enum": [
                                  ""
                                ],
                                "type": "string"
                              }
                            ]
                          },
                          "statement_descriptor_prefix_kanji": {
                            "anyOf": [
                              {
                                "maxLength": 10,
                                "type": "string"
                              },
                              {
                                "enum": [
                                  ""
                                ],
                                "type": "string"
                              }
                            ]
                          }
                        },
                        "title": "card_payments_settings_specs",
                        "type": "object"
                      },
                      "invoices": {
                        "properties": {
                          "default_account_tax_ids": {
                            "anyOf": [
                              {
                                "items": {
                                  "maxLength": 5000,
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              {
                                "enum": [
                                  ""
                                ],
                                "type": "string"
                              }
                            ]
                          },
                          "hosted_payment_method_save": {
                            "enum": [
                              "always",
                              "never",
                              "offer"
                            ],
                            "type": "string"
                          }
                        },
                        "title": "invoices_settings_specs",
                        "type": "object"
                      },
                      "payments": {
                        "properties": {
                          "statement_descriptor": {
                            "maxLength": 22,
                            "type": "string"
                          },
                          "statement_descriptor_kana": {
                            "maxLength": 22,
                            "type": "string"
                          },
                          "statement_descriptor_kanji": {
                            "maxLength": 22,
                            "type": "string"
                          }
                        },
                        "title": "payments_settings_specs",
                        "type": "object"
                      },
                      "payouts": {
                        "properties": {
                          "debit_negative_balances": {
                            "type": "boolean"
                          },
                          "schedule": {
                            "properties": {
                              "delay_days": {
                                "anyOf": [
                                  {
                                    "enum": [
                                      "minimum"
                                    ],
                                    "maxLength": 5000,
                                    "type": "string"
                                  },
                                  {
                                    "type": "integer"
                                  }
                                ]
                              },
                              "interval": {
                                "enum": [
                                  "daily",
                                  "manual",
                                  "monthly",
                                  "weekly"
                                ],
                                "maxLength": 5000,
                                "type": "string",
                                "x-stripeBypassValidation": true
                              },
                              "monthly_anchor": {
                                "type": "integer"
                              },
                              "monthly_payout_days": {
                                "items": {
                                  "type": "integer"
                                },
                                "type": "array"
                              },
                              "weekly_anchor": {
                                "enum": [
                                  "friday",
                                  "monday",
                                  "saturday",
                                  "sunday",
                                  "thursday",
                                  "tuesday",
                                  "wednesday"
                                ],
                                "maxLength": 5000,
                                "type": "string"
                              },
                              "weekly_payout_days": {
                                "items": {
                                  "enum": [
                                    "friday",
                                    "monday",
                                    "saturday",
                                    "sunday",
                                    "thursday",
                                    "tuesday",
                                    "wednesday"
                                  ],
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            },
                            "title": "transfer_schedule_specs",
                            "type": "object"
                          },
                          "statement_descriptor": {
                            "maxLength": 22,
                            "type": "string"
                          }
                        },
                        "title": "payout_settings_specs",
                        "type": "object"
                      },
                      "treasury": {
                        "properties": {
                          "tos_acceptance": {
                            "properties": {
                              "date": {
                                "format": "unix-time",
                                "type": "integer"
                              },
                              "ip": {
                                "type": "string"
                              },
                              "user_agent": {
                                "anyOf": [
                                  {
                                    "maxLength": 5000,
                                    "type": "string"
                                  },
                                  {
                                    "enum": [
                                      ""
                                    ],
                                    "type": "string"
                                  }
                                ]
                              }
                            },
                            "title": "settings_terms_of_service_specs",
                            "type": "object"
                          }
                        },
                        "title": "treasury_settings_specs",
                        "type": "object"
                      }
                    },
                    "title": "settings_specs_update",
                    "type": "object"
                  },
                  "tos_acceptance": {
                    "description": "Details on the account's acceptance of the [Stripe Services Agreement](/connect/updating-accounts#tos-acceptance). This property can only be updated for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts. This property defaults to a `full` service agreement when empty.",
                    "properties": {
                      "date": {
                        "format": "unix-time",
                        "type": "integer"
                      },
                      "ip": {
                        "type": "string"
                      },
                      "service_agreement": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "user_agent": {
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "title": "tos_acceptance_specs",
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        },
        "summary": "Update an account"
      }
    },
    "/v1/accounts/{account}/bank_accounts": {
      "post": {
        "description": "<p>Create an external account for a given account.</p>",
        "operationId": "PostAccountsAccountBankAccounts",
        "parameters": [
          {
            "in": "path",
            "name": "account",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {
                "bank_account": {
                  "explode": true,
                  "style": "deepObject"
                },
                "expand": {
                  "explode": true,
                  "style": "deepObject"
                },
                "metadata": {
                  "explode": true,
                  "style": "deepObject"
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "bank_account": {
                    "anyOf": [
                      {
                        "properties": {
                          "account_holder_name": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "account_holder_type": {
                            "enum": [
                              "company",
                              "individual"
                            ],
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "account_number": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "account_type": {
                            "enum": [
                              "checking",
                              "futsu",
                              "savings",
                              "toza"
                            ],
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "country": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "currency": {
                            "format": "currency",
                            "type": "string"
                          },
                          "documents": {
                            "properties": {
                              "bank_account_ownership_verification": {
                                "properties": {
                                  "files": {
                                    "items": {
                                      "maxLength": 500,
                                      "type": "string"
                                    },
                                    "type": "array"
                                  }
                                },
                                "title": "documents_param",
                                "type": "object"
                              }
                            },
                            "title": "external_account_documents_param",
                            "type": "object"
                          },
                          "object": {
                            "enum": [
                              "bank_account"
                            ],
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "routing_number": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "required": [
                          "account_number",
                          "country"
                        ],
                        "title": "external_account_payout_bank_account",
                        "type": "object"
                      },
                      {
                        "maxLength": 5000,
                        "type": "string"
                      }
                    ],
                    "description": "Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/js), or a dictionary containing a user's bank account details."
                  },
                  "default_for_currency": {
                    "description": "When set to true, or if this is the first external account added in this currency, this account becomes the default external account for its currency.",
                    "type": "boolean"
                  },
                  "expand": {
                    "description": "Specifies which fields in the response should be expanded.",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "external_account": {
                    "description": "A token, like the ones returned by [Stripe.js](https://stripe.com/docs/js) or a dictionary containing a user's external account details (with the options shown below). Please refer to full [documentation](https://stripe.com/docs/api/external_accounts) instead.",
                    "maxLength": 5000,
                    "type": "string",
                    "x-stripeBypassValidation": true
                  },
                  "metadata": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/external_account"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        },
        "summary": "Create an external account"
      }
    },
    "/v1/accounts/{account}/bank_accounts/{id}": {
      "delete": {
        "description": "<p>Delete a specified external account for a given account.</p>",
        "operationId": "DeleteAccountsAccountBankAccountsId",
        "parameters": [
          {
            "in": "path",
            "name": "account",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Unique identifier for the external account to be deleted.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleted_external_account"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        },
        "summary": "Delete an external account"
      },
      "get": {
        "description": "<p>Retrieve a specified external account for a given account.</p>",
        "operationId": "GetAccountsAccountBankAccountsId",
        "parameters": [
          {
            "in": "path",
            "name": "account",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "explode": true,
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "style": "deepObject"
          },
          {
            "description": "Unique identifier for the external account to be retrieved.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/external_account"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        },
        "summary": "Retrieve an external account"
      },
      "post": {
        "description": "<p>Updates the metadata, account holder name, account holder type of a bank account belonging to\na connected account and optionally sets it as the default for its currency. Other bank account\ndetails are not editable by design.</p>\n\n<p>You can only update bank accounts when <a href=\"/api/accounts/object#account_object-controller-requirement_collection\">account.controller.requirement_collection</a> is <code>application</code>, which includes <a href=\"/connect/custom-accounts\">Custom accounts</a>.</p>\n\n<p>You can re-enable a disabled bank account by performing an update call without providing any\narguments or changes.</p>",
        "operationId": "PostAccountsAccountBankAccountsId",
        "parameters": [
          {
            "in": "path",
            "name": "account",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {
                "documents": {
                  "explode": true,
                  "style": "deepObject"
                },
                "expand": {
                  "explode": true,
                  "style": "deepObject"
                },
                "metadata": {
                  "explode": true,
                  "style": "deepObject"
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "account_holder_name": {
                    "description": "The name of the person or business that owns the bank account.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "account_holder_type": {
                    "description": "The type of entity that holds the account. This can be either `individual` or `company`.",
                    "enum": [
                      "",
                      "company",
                      "individual"
                    ],
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "account_type": {
                    "description": "The bank account type. This can only be `checking` or `savings` in most countries. In Japan, this can only be `futsu` or `toza`.",
                    "enum": [
                      "checking",
                      "futsu",
                      "savings",
                      "toza"
                    ],
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "address_city": {
                    "description": "City/District/Suburb/Town/Village.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "address_country": {
                    "description": "Billing address country, if provided when creating card.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "address_line1": {
                    "description": "Address line 1 (Street address/PO Box/Company name).",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "address_line2": {
                    "description": "Address line 2 (Apartment/Suite/Unit/Building).",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "address_state": {
                    "description": "State/County/Province/Region.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "address_zip": {
                    "description": "ZIP or postal code.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "default_for_currency": {
                    "description": "When set to true, this becomes the default external account for its currency.",
                    "type": "boolean"
                  },
                  "documents": {
                    "description": "Documents that may be submitted to satisfy various informational requests.",
                    "properties": {
                      "bank_account_ownership_verification": {
                        "properties": {
                          "files": {
                            "items": {
                              "maxLength": 500,
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      }
                    },
                    "title": "external_account_documents_param",
                    "type": "object"
                  },
                  "exp_month": {
                    "description": "Two digit number representing the card’s expiration month.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "exp_year": {
                    "description": "Four digit number representing the card’s expiration year.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "expand": {
                    "description": "Specifies which fields in the response should be expanded.",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "metadata": {
                    "anyOf": [
                      {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "type": "object"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`."
                  },
                  "name": {
                    "description": "Cardholder name.",
                    "maxLength": 5000,
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/external_account"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        }
      }
    },
    "/v1/accounts/{account}/capabilities": {
      "get": {
        "description": "<p>Returns a list of capabilities associated with the account. The capabilities are returned sorted by creation date, with the most recent capability appearing first.</p>",
        "operationId": "GetAccountsAccountCapabilities",
        "parameters": [
          {
            "in": "path",
            "name": "account",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "explode": true,
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "style": "deepObject"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/capability"
                      },
                      "type": "array"
                    },
                    "has_more": {
                      "description": "True if this list has another page of items after this one that can be fetched.",
                      "type": "boolean"
                    },
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    },
                    "url": {
                      "description": "The URL where this list can be accessed.",
                      "maxLength": 5000,
                      "type": "string"
                    }
                  },
                  "required": [
                    "data",
                    "has_more",
                    "object",
                    "url"
                  ],
                  "title": "ListAccountCapability",
                  "type": "object",
                  "x-expandableFields": [
                    "data"
                  ]
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        },
        "summary": "List all account capabilities"
      }
    },
    "/v1/accounts/{account}/capabilities/{capability}": {
      "get": {
        "description": "<p>Retrieves information about the specified Account Capability.</p>",
        "operationId": "GetAccountsAccountCapabilitiesCapability",
        "parameters": [
          {
            "in": "path",
            "name": "account",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "capability",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "explode": true,
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "style": "deepObject"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/capability"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        },
        "summary": "Retrieve an Account Capability"
      },
      "post": {
        "description": "<p>Updates an existing Account Capability. Request or remove a capability by updating its <code>requested</code> parameter.</p>",
        "operationId": "PostAccountsAccountCapabilitiesCapability",
        "parameters": [
          {
            "in": "path",
            "name": "account",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "capability",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {
                "expand": {
                  "explode": true,
                  "style": "deepObject"
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "expand": {
                    "description": "Specifies which fields in the response should be expanded.",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "requested": {
                    "description": "To request a new capability for an account, pass true. There can be a delay before the requested capability becomes active. If the capability has any activation requirements, the response includes them in the `requirements` arrays.\n\nIf a capability isn't permanent, you can remove it from the account by passing false. Some capabilities are permanent after they've been requested. Attempting to remove a permanent capability returns an error.",
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/capability"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        },
        "summary": "Update an Account Capability"
      }
    },
    "/v1/accounts/{account}/external_accounts": {
      "get": {
        "description": "<p>List external accounts for an account.</p>",
        "operationId": "GetAccountsAccountExternalAccounts",
        "parameters": [
          {
            "in": "path",
            "name": "account",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "explode": true,
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "style": "deepObject"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "Filter external accounts according to a particular object type.",
            "in": "query",
            "name": "object",
            "required": false,
            "schema": {
              "enum": [
                "bank_account",
                "card"
              ],
              "maxLength": 5000,
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "style": "form"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "properties": {
                    "data": {
                      "description": "The list contains all external accounts that have been attached to the Stripe account. These may be bank accounts or cards.",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/bank_account"
                          },
                          {
                            "$ref": "#/components/schemas/card"
                          }
                        ],
                        "title": "Polymorphic",
                        "x-stripeBypassValidation": true
                      },
                      "type": "array"
                    },
                    "has_more": {
                      "description": "True if this list has another page of items after this one that can be fetched.",
                      "type": "boolean"
                    },
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    },
                    "url": {
                      "description": "The URL where this list can be accessed.",
                      "maxLength": 5000,
                      "type": "string"
                    }
                  },
                  "required": [
                    "data",
                    "has_more",
                    "object",
                    "url"
                  ],
                  "title": "ExternalAccountList",
                  "type": "object",
                  "x-expandableFields": [
                    "data"
                  ]
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        },
        "summary": "List all external accounts"
      },
      "post": {
        "description": "<p>Create an external account for a given account.</p>",
        "operationId": "PostAccountsAccountExternalAccounts",
        "parameters": [
          {
            "in": "path",
            "name": "account",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {
                "bank_account": {
                  "explode": true,
                  "style": "deepObject"
                },
                "expand": {
                  "explode": true,
                  "style": "deepObject"
                },
                "metadata": {
                  "explode": true,
                  "style": "deepObject"
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "bank_account": {
                    "anyOf": [
                      {
                        "properties": {
                          "account_holder_name": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "account_holder_type": {
                            "enum": [
                              "company",
                              "individual"
                            ],
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "account_number": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "account_type": {
                            "enum": [
                              "checking",
                              "futsu",
                              "savings",
                              "toza"
                            ],
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "country": {
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "currency": {
                            "format": "currency",
                            "type": "string"
                          },
                          "documents": {
                            "properties": {
                              "bank_account_ownership_verification": {
                                "properties": {
                                  "files": {
                                    "items": {
                                      "maxLength": 500,
                                      "type": "string"
                                    },
                                    "type": "array"
                                  }
                                },
                                "title": "documents_param",
                                "type": "object"
                              }
                            },
                            "title": "external_account_documents_param",
                            "type": "object"
                          },
                          "object": {
                            "enum": [
                              "bank_account"
                            ],
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "routing_number": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "required": [
                          "account_number",
                          "country"
                        ],
                        "title": "external_account_payout_bank_account",
                        "type": "object"
                      },
                      {
                        "maxLength": 5000,
                        "type": "string"
                      }
                    ],
                    "description": "Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/js), or a dictionary containing a user's bank account details."
                  },
                  "default_for_currency": {
                    "description": "When set to true, or if this is the first external account added in this currency, this account becomes the default external account for its currency.",
                    "type": "boolean"
                  },
                  "expand": {
                    "description": "Specifies which fields in the response should be expanded.",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "external_account": {
                    "description": "A token, like the ones returned by [Stripe.js](https://stripe.com/docs/js) or a dictionary containing a user's external account details (with the options shown below). Please refer to full [documentation](https://stripe.com/docs/api/external_accounts) instead.",
                    "maxLength": 5000,
                    "type": "string",
                    "x-stripeBypassValidation": true
                  },
                  "metadata": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/external_account"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        },
        "summary": "Create an external account"
      }
    },
    "/v1/accounts/{account}/external_accounts/{id}": {
      "delete": {
        "description": "<p>Delete a specified external account for a given account.</p>",
        "operationId": "DeleteAccountsAccountExternalAccountsId",
        "parameters": [
          {
            "in": "path",
            "name": "account",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Unique identifier for the external account to be deleted.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleted_external_account"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        },
        "summary": "Delete an external account"
      },
      "get": {
        "description": "<p>Retrieve a specified external account for a given account.</p>",
        "operationId": "GetAccountsAccountExternalAccountsId",
        "parameters": [
          {
            "in": "path",
            "name": "account",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "explode": true,
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "style": "deepObject"
          },
          {
            "description": "Unique identifier for the external account to be retrieved.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/external_account"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        },
        "summary": "Retrieve an external account"
      },
      "post": {
        "description": "<p>Updates the metadata, account holder name, account holder type of a bank account belonging to\na connected account and optionally sets it as the default for its currency. Other bank account\ndetails are not editable by design.</p>\n\n<p>You can only update bank accounts when <a href=\"/api/accounts/object#account_object-controller-requirement_collection\">account.controller.requirement_collection</a> is <code>application</code>, which includes <a href=\"/connect/custom-accounts\">Custom accounts</a>.</p>\n\n<p>You can re-enable a disabled bank account by performing an update call without providing any\narguments or changes.</p>",
        "operationId": "PostAccountsAccountExternalAccountsId",
        "parameters": [
          {
            "in": "path",
            "name": "account",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {
                "documents": {
                  "explode": true,
                  "style": "deepObject"
                },
                "expand": {
                  "explode": true,
                  "style": "deepObject"
                },
                "metadata": {
                  "explode": true,
                  "style": "deepObject"
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "account_holder_name": {
                    "description": "The name of the person or business that owns the bank account.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "account_holder_type": {
                    "description": "The type of entity that holds the account. This can be either `individual` or `company`.",
                    "enum": [
                      "",
                      "company",
                      "individual"
                    ],
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "account_type": {
                    "description": "The bank account type. This can only be `checking` or `savings` in most countries. In Japan, this can only be `futsu` or `toza`.",
                    "enum": [
                      "checking",
                      "futsu",
                      "savings",
                      "toza"
                    ],
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "address_city": {
                    "description": "City/District/Suburb/Town/Village.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "address_country": {
                    "description": "Billing address country, if provided when creating card.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "address_line1": {
                    "description": "Address line 1 (Street address/PO Box/Company name).",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "address_line2": {
                    "description": "Address line 2 (Apartment/Suite/Unit/Building).",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "address_state": {
                    "description": "State/County/Province/Region.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "address_zip": {
                    "description": "ZIP or postal code.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "default_for_currency": {
                    "description": "When set to true, this becomes the default external account for its currency.",
                    "type": "boolean"
                  },
                  "documents": {
                    "description": "Documents that may be submitted to satisfy various informational requests.",
                    "properties": {
                      "bank_account_ownership_verification": {
                        "properties": {
                          "files": {
                            "items": {
                              "maxLength": 500,
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      }
                    },
                    "title": "external_account_documents_param",
                    "type": "object"
                  },
                  "exp_month": {
                    "description": "Two digit number representing the card’s expiration month.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "exp_year": {
                    "description": "Four digit number representing the card’s expiration year.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "expand": {
                    "description": "Specifies which fields in the response should be expanded.",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "metadata": {
                    "anyOf": [
                      {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "type": "object"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`."
                  },
                  "name": {
                    "description": "Cardholder name.",
                    "maxLength": 5000,
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/external_account"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        }
      }
    },
    "/v1/accounts/{account}/login_links": {
      "post": {
        "description": "<p>Creates a login link for a connected account to access the Express Dashboard.</p>\n\n<p><strong>You can only create login links for accounts that use the <a href=\"/connect/express-dashboard\">Express Dashboard</a> and are connected to your platform</strong>.</p>",
        "operationId": "PostAccountsAccountLoginLinks",
        "parameters": [
          {
            "in": "path",
            "name": "account",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {
                "expand": {
                  "explode": true,
                  "style": "deepObject"
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "expand": {
                    "description": "Specifies which fields in the response should be expanded.",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/login_link"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        },
        "summary": "Create a login link"
      }
    },
    "/v1/accounts/{account}/people": {
      "get": {
        "description": "<p>Returns a list of people associated with the account’s legal entity. The people are returned sorted by creation date, with the most recent people appearing first.</p>",
        "operationId": "GetAccountsAccountPeople",
        "parameters": [
          {
            "in": "path",
            "name": "account",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "explode": true,
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "style": "deepObject"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "Filters on the list of people returned based on the person's relationship to the account's company.",
            "explode": true,
            "in": "query",
            "name": "relationship",
            "required": false,
            "schema": {
              "properties": {
                "authorizer": {
                  "type": "boolean"
                },
                "director": {
                  "type": "boolean"
                },
                "executive": {
                  "type": "boolean"
                },
                "legal_guardian": {
                  "type": "boolean"
                },
                "owner": {
                  "type": "boolean"
                },
                "representative": {
                  "type": "boolean"
                }
              },
              "title": "all_people_relationship_specs",
              "type": "object"
            },
            "style": "deepObject"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/person"
                      },
                      "type": "array"
                    },
                    "has_more": {
                      "description": "True if this list has another page of items after this one that can be fetched.",
                      "type": "boolean"
                    },
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    },
                    "url": {
                      "description": "The URL where this list can be accessed.",
                      "maxLength": 5000,
                      "type": "string"
                    }
                  },
                  "required": [
                    "data",
                    "has_more",
                    "object",
                    "url"
                  ],
                  "title": "PersonList",
                  "type": "object",
                  "x-expandableFields": [
                    "data"
                  ]
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        },
        "summary": "List all persons"
      },
      "post": {
        "description": "<p>Creates a new person.</p>",
        "operationId": "PostAccountsAccountPeople",
        "parameters": [
          {
            "in": "path",
            "name": "account",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {
                "additional_tos_acceptances": {
                  "explode": true,
                  "style": "deepObject"
                },
                "address": {
                  "explode": true,
                  "style": "deepObject"
                },
                "address_kana": {
                  "explode": true,
                  "style": "deepObject"
                },
                "address_kanji": {
                  "explode": true,
                  "style": "deepObject"
                },
                "dob": {
                  "explode": true,
                  "style": "deepObject"
                },
                "documents": {
                  "explode": true,
                  "style": "deepObject"
                },
                "expand": {
                  "explode": true,
                  "style": "deepObject"
                },
                "full_name_aliases": {
                  "explode": true,
                  "style": "deepObject"
                },
                "metadata": {
                  "explode": true,
                  "style": "deepObject"
                },
                "registered_address": {
                  "explode": true,
                  "style": "deepObject"
                },
                "relationship": {
                  "explode": true,
                  "style": "deepObject"
                },
                "us_cfpb_data": {
                  "explode": true,
                  "style": "deepObject"
                },
                "verification": {
                  "explode": true,
                  "style": "deepObject"
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "additional_tos_acceptances": {
                    "description": "Details on the legal guardian's or authorizer's acceptance of the required Stripe agreements.",
                    "properties": {
                      "account": {
                        "properties": {
                          "date": {
                            "format": "unix-time",
                            "type": "integer"
                          },
                          "ip": {
                            "type": "string"
                          },
                          "user_agent": {
                            "anyOf": [
                              {
                                "maxLength": 5000,
                                "type": "string"
                              },
                              {
                                "enum": [
                                  ""
                                ],
                                "type": "string"
                              }
                            ]
                          }
                        },
                        "title": "settings_terms_of_service_specs",
                        "type": "object"
                      }
                    },
                    "title": "person_additional_tos_acceptances_specs",
                    "type": "object"
                  },
                  "address": {
                    "description": "The person's address.",
                    "properties": {
                      "city": {
                        "maxLength": 100,
                        "type": "string"
                      },
                      "country": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "line1": {
                        "maxLength": 200,
                        "type": "string"
                      },
                      "line2": {
                        "maxLength": 200,
                        "type": "string"
                      },
                      "postal_code": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "state": {
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "title": "legal_entity_and_kyc_address_specs",
                    "type": "object"
                  },
                  "address_kana": {
                    "description": "The Kana variation of the person's address (Japan only).",
                    "properties": {
                      "city": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "country": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "line1": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "line2": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "postal_code": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "state": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "town": {
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "title": "japan_address_kana_specs",
                    "type": "object"
                  },
                  "address_kanji": {
                    "description": "The Kanji variation of the person's address (Japan only).",
                    "properties": {
                      "city": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "country": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "line1": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "line2": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "postal_code": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "state": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "town": {
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "title": "japan_address_kanji_specs",
                    "type": "object"
                  },
                  "dob": {
                    "anyOf": [
                      {
                        "properties": {
                          "day": {
                            "type": "integer"
                          },
                          "month": {
                            "type": "integer"
                          },
                          "year": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "day",
                          "month",
                          "year"
                        ],
                        "title": "date_of_birth_specs",
                        "type": "object"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "The person's date of birth."
                  },
                  "documents": {
                    "description": "Documents that may be submitted to satisfy various informational requests.",
                    "properties": {
                      "company_authorization": {
                        "properties": {
                          "files": {
                            "items": {
                              "anyOf": [
                                {
                                  "maxLength": 500,
                                  "type": "string"
                                },
                                {
                                  "enum": [
                                    ""
                                  ],
                                  "type": "string"
                                }
                              ]
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      },
                      "passport": {
                        "properties": {
                          "files": {
                            "items": {
                              "anyOf": [
                                {
                                  "maxLength": 500,
                                  "type": "string"
                                },
                                {
                                  "enum": [
                                    ""
                                  ],
                                  "type": "string"
                                }
                              ]
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      },
                      "visa": {
                        "properties": {
                          "files": {
                            "items": {
                              "anyOf": [
                                {
                                  "maxLength": 500,
                                  "type": "string"
                                },
                                {
                                  "enum": [
                                    ""
                                  ],
                                  "type": "string"
                                }
                              ]
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      }
                    },
                    "title": "person_documents_specs",
                    "type": "object"
                  },
                  "email": {
                    "description": "The person's email address.",
                    "type": "string"
                  },
                  "expand": {
                    "description": "Specifies which fields in the response should be expanded.",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "first_name": {
                    "description": "The person's first name.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "first_name_kana": {
                    "description": "The Kana variation of the person's first name (Japan only).",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "first_name_kanji": {
                    "description": "The Kanji variation of the person's first name (Japan only).",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "full_name_aliases": {
                    "anyOf": [
                      {
                        "items": {
                          "maxLength": 5000,
                          "type": "string"
                        },
                        "type": "array"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "A list of alternate names or aliases that the person is known by."
                  },
                  "gender": {
                    "description": "The person's gender (International regulations require either \"male\" or \"female\").",
                    "type": "string"
                  },
                  "id_number": {
                    "description": "The person's ID number, as appropriate for their country. For example, a social security number in the U.S., social insurance number in Canada, etc. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https://docs.stripe.com/js/tokens/create_token?type=pii).",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "id_number_secondary": {
                    "description": "The person's secondary ID number, as appropriate for their country, will be used for enhanced verification checks. In Thailand, this would be the laser code found on the back of an ID card. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https://docs.stripe.com/js/tokens/create_token?type=pii).",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "last_name": {
                    "description": "The person's last name.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "last_name_kana": {
                    "description": "The Kana variation of the person's last name (Japan only).",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "last_name_kanji": {
                    "description": "The Kanji variation of the person's last name (Japan only).",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "maiden_name": {
                    "description": "The person's maiden name.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "metadata": {
                    "anyOf": [
                      {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "type": "object"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`."
                  },
                  "nationality": {
                    "description": "The country where the person is a national. Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)), or \"XX\" if unavailable.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "person_token": {
                    "description": "A [person token](https://docs.stripe.com/connect/account-tokens), used to securely provide details to the person.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "phone": {
                    "description": "The person's phone number.",
                    "type": "string"
                  },
                  "political_exposure": {
                    "description": "Indicates if the person or any of their representatives, family members, or other closely related persons, declares that they hold or have held an important public job or function, in any jurisdiction.",
                    "enum": [
                      "existing",
                      "none"
                    ],
                    "type": "string"
                  },
                  "registered_address": {
                    "description": "The person's registered address.",
                    "properties": {
                      "city": {
                        "maxLength": 100,
                        "type": "string"
                      },
                      "country": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "line1": {
                        "maxLength": 200,
                        "type": "string"
                      },
                      "line2": {
                        "maxLength": 200,
                        "type": "string"
                      },
                      "postal_code": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "state": {
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "title": "address_specs",
                    "type": "object"
                  },
                  "relationship": {
                    "description": "The relationship that this person has with the account's legal entity.",
                    "properties": {
                      "authorizer": {
                        "type": "boolean"
                      },
                      "director": {
                        "type": "boolean"
                      },
                      "executive": {
                        "type": "boolean"
                      },
                      "legal_guardian": {
                        "type": "boolean"
                      },
                      "owner": {
                        "type": "boolean"
                      },
                      "percent_ownership": {
                        "anyOf": [
                          {
                            "type": "number"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "representative": {
                        "type": "boolean"
                      },
                      "title": {
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "title": "relationship_specs",
                    "type": "object"
                  },
                  "ssn_last_4": {
                    "description": "The last four digits of the person's Social Security number (U.S. only).",
                    "type": "string"
                  },
                  "us_cfpb_data": {
                    "description": "Demographic data related to the person.",
                    "properties": {
                      "ethnicity_details": {
                        "properties": {
                          "ethnicity": {
                            "items": {
                              "enum": [
                                "cuban",
                                "hispanic_or_latino",
                                "mexican",
                                "not_hispanic_or_latino",
                                "other_hispanic_or_latino",
                                "prefer_not_to_answer",
                                "puerto_rican"
                              ],
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "ethnicity_other": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "us_cfpb_ethnicity_details_specs",
                        "type": "object"
                      },
                      "race_details": {
                        "properties": {
                          "race": {
                            "items": {
                              "enum": [
                                "african_american",
                                "american_indian_or_alaska_native",
                                "asian",
                                "asian_indian",
                                "black_or_african_american",
                                "chinese",
                                "ethiopian",
                                "filipino",
                                "guamanian_or_chamorro",
                                "haitian",
                                "jamaican",
                                "japanese",
                                "korean",
                                "native_hawaiian",
                                "native_hawaiian_or_other_pacific_islander",
                                "nigerian",
                                "other_asian",
                                "other_black_or_african_american",
                                "other_pacific_islander",
                                "prefer_not_to_answer",
                                "samoan",
                                "somali",
                                "vietnamese",
                                "white"
                              ],
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "race_other": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "us_cfpb_race_details_specs",
                        "type": "object"
                      },
                      "self_identified_gender": {
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "title": "us_cfpb_data_specs",
                    "type": "object"
                  },
                  "verification": {
                    "description": "The person's verification status.",
                    "properties": {
                      "additional_document": {
                        "properties": {
                          "back": {
                            "maxLength": 500,
                            "type": "string"
                          },
                          "front": {
                            "maxLength": 500,
                            "type": "string"
                          }
                        },
                        "title": "person_verification_document_specs",
                        "type": "object"
                      },
                      "document": {
                        "properties": {
                          "back": {
                            "maxLength": 500,
                            "type": "string"
                          },
                          "front": {
                            "maxLength": 500,
                            "type": "string"
                          }
                        },
                        "title": "person_verification_document_specs",
                        "type": "object"
                      }
                    },
                    "title": "person_verification_specs",
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/person"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        },
        "summary": "Create a person"
      }
    },
    "/v1/accounts/{account}/people/{person}": {
      "delete": {
        "description": "<p>Deletes an existing person’s relationship to the account’s legal entity. Any person with a relationship for an account can be deleted through the API, except if the person is the <code>account_opener</code>. If your integration is using the <code>executive</code> parameter, you cannot delete the only verified <code>executive</code> on file.</p>",
        "operationId": "DeleteAccountsAccountPeoplePerson",
        "parameters": [
          {
            "in": "path",
            "name": "account",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "person",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleted_person"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        },
        "summary": "Delete a person"
      },
      "get": {
        "description": "<p>Retrieves an existing person.</p>",
        "operationId": "GetAccountsAccountPeoplePerson",
        "parameters": [
          {
            "in": "path",
            "name": "account",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "explode": true,
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "style": "deepObject"
          },
          {
            "in": "path",
            "name": "person",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/person"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        },
        "summary": "Retrieve a person"
      },
      "post": {
        "description": "<p>Updates an existing person.</p>",
        "operationId": "PostAccountsAccountPeoplePerson",
        "parameters": [
          {
            "in": "path",
            "name": "account",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "person",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {
                "additional_tos_acceptances": {
                  "explode": true,
                  "style": "deepObject"
                },
                "address": {
                  "explode": true,
                  "style": "deepObject"
                },
                "address_kana": {
                  "explode": true,
                  "style": "deepObject"
                },
                "address_kanji": {
                  "explode": true,
                  "style": "deepObject"
                },
                "dob": {
                  "explode": true,
                  "style": "deepObject"
                },
                "documents": {
                  "explode": true,
                  "style": "deepObject"
                },
                "expand": {
                  "explode": true,
                  "style": "deepObject"
                },
                "full_name_aliases": {
                  "explode": true,
                  "style": "deepObject"
                },
                "metadata": {
                  "explode": true,
                  "style": "deepObject"
                },
                "registered_address": {
                  "explode": true,
                  "style": "deepObject"
                },
                "relationship": {
                  "explode": true,
                  "style": "deepObject"
                },
                "us_cfpb_data": {
                  "explode": true,
                  "style": "deepObject"
                },
                "verification": {
                  "explode": true,
                  "style": "deepObject"
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "additional_tos_acceptances": {
                    "description": "Details on the legal guardian's or authorizer's acceptance of the required Stripe agreements.",
                    "properties": {
                      "account": {
                        "properties": {
                          "date": {
                            "format": "unix-time",
                            "type": "integer"
                          },
                          "ip": {
                            "type": "string"
                          },
                          "user_agent": {
                            "anyOf": [
                              {
                                "maxLength": 5000,
                                "type": "string"
                              },
                              {
                                "enum": [
                                  ""
                                ],
                                "type": "string"
                              }
                            ]
                          }
                        },
                        "title": "settings_terms_of_service_specs",
                        "type": "object"
                      }
                    },
                    "title": "person_additional_tos_acceptances_specs",
                    "type": "object"
                  },
                  "address": {
                    "description": "The person's address.",
                    "properties": {
                      "city": {
                        "maxLength": 100,
                        "type": "string"
                      },
                      "country": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "line1": {
                        "maxLength": 200,
                        "type": "string"
                      },
                      "line2": {
                        "maxLength": 200,
                        "type": "string"
                      },
                      "postal_code": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "state": {
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "title": "legal_entity_and_kyc_address_specs",
                    "type": "object"
                  },
                  "address_kana": {
                    "description": "The Kana variation of the person's address (Japan only).",
                    "properties": {
                      "city": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "country": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "line1": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "line2": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "postal_code": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "state": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "town": {
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "title": "japan_address_kana_specs",
                    "type": "object"
                  },
                  "address_kanji": {
                    "description": "The Kanji variation of the person's address (Japan only).",
                    "properties": {
                      "city": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "country": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "line1": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "line2": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "postal_code": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "state": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "town": {
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "title": "japan_address_kanji_specs",
                    "type": "object"
                  },
                  "dob": {
                    "anyOf": [
                      {
                        "properties": {
                          "day": {
                            "type": "integer"
                          },
                          "month": {
                            "type": "integer"
                          },
                          "year": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "day",
                          "month",
                          "year"
                        ],
                        "title": "date_of_birth_specs",
                        "type": "object"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "The person's date of birth."
                  },
                  "documents": {
                    "description": "Documents that may be submitted to satisfy various informational requests.",
                    "properties": {
                      "company_authorization": {
                        "properties": {
                          "files": {
                            "items": {
                              "anyOf": [
                                {
                                  "maxLength": 500,
                                  "type": "string"
                                },
                                {
                                  "enum": [
                                    ""
                                  ],
                                  "type": "string"
                                }
                              ]
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      },
                      "passport": {
                        "properties": {
                          "files": {
                            "items": {
                              "anyOf": [
                                {
                                  "maxLength": 500,
                                  "type": "string"
                                },
                                {
                                  "enum": [
                                    ""
                                  ],
                                  "type": "string"
                                }
                              ]
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      },
                      "visa": {
                        "properties": {
                          "files": {
                            "items": {
                              "anyOf": [
                                {
                                  "maxLength": 500,
                                  "type": "string"
                                },
                                {
                                  "enum": [
                                    ""
                                  ],
                                  "type": "string"
                                }
                              ]
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      }
                    },
                    "title": "person_documents_specs",
                    "type": "object"
                  },
                  "email": {
                    "description": "The person's email address.",
                    "type": "string"
                  },
                  "expand": {
                    "description": "Specifies which fields in the response should be expanded.",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "first_name": {
                    "description": "The person's first name.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "first_name_kana": {
                    "description": "The Kana variation of the person's first name (Japan only).",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "first_name_kanji": {
                    "description": "The Kanji variation of the person's first name (Japan only).",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "full_name_aliases": {
                    "anyOf": [
                      {
                        "items": {
                          "maxLength": 5000,
                          "type": "string"
                        },
                        "type": "array"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "A list of alternate names or aliases that the person is known by."
                  },
                  "gender": {
                    "description": "The person's gender (International regulations require either \"male\" or \"female\").",
                    "type": "string"
                  },
                  "id_number": {
                    "description": "The person's ID number, as appropriate for their country. For example, a social security number in the U.S., social insurance number in Canada, etc. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https://docs.stripe.com/js/tokens/create_token?type=pii).",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "id_number_secondary": {
                    "description": "The person's secondary ID number, as appropriate for their country, will be used for enhanced verification checks. In Thailand, this would be the laser code found on the back of an ID card. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https://docs.stripe.com/js/tokens/create_token?type=pii).",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "last_name": {
                    "description": "The person's last name.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "last_name_kana": {
                    "description": "The Kana variation of the person's last name (Japan only).",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "last_name_kanji": {
                    "description": "The Kanji variation of the person's last name (Japan only).",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "maiden_name": {
                    "description": "The person's maiden name.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "metadata": {
                    "anyOf": [
                      {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "type": "object"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`."
                  },
                  "nationality": {
                    "description": "The country where the person is a national. Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)), or \"XX\" if unavailable.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "person_token": {
                    "description": "A [person token](https://docs.stripe.com/connect/account-tokens), used to securely provide details to the person.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "phone": {
                    "description": "The person's phone number.",
                    "type": "string"
                  },
                  "political_exposure": {
                    "description": "Indicates if the person or any of their representatives, family members, or other closely related persons, declares that they hold or have held an important public job or function, in any jurisdiction.",
                    "enum": [
                      "existing",
                      "none"
                    ],
                    "type": "string"
                  },
                  "registered_address": {
                    "description": "The person's registered address.",
                    "properties": {
                      "city": {
                        "maxLength": 100,
                        "type": "string"
                      },
                      "country": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "line1": {
                        "maxLength": 200,
                        "type": "string"
                      },
                      "line2": {
                        "maxLength": 200,
                        "type": "string"
                      },
                      "postal_code": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "state": {
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "title": "address_specs",
                    "type": "object"
                  },
                  "relationship": {
                    "description": "The relationship that this person has with the account's legal entity.",
                    "properties": {
                      "authorizer": {
                        "type": "boolean"
                      },
                      "director": {
                        "type": "boolean"
                      },
                      "executive": {
                        "type": "boolean"
                      },
                      "legal_guardian": {
                        "type": "boolean"
                      },
                      "owner": {
                        "type": "boolean"
                      },
                      "percent_ownership": {
                        "anyOf": [
                          {
                            "type": "number"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "representative": {
                        "type": "boolean"
                      },
                      "title": {
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "title": "relationship_specs",
                    "type": "object"
                  },
                  "ssn_last_4": {
                    "description": "The last four digits of the person's Social Security number (U.S. only).",
                    "type": "string"
                  },
                  "us_cfpb_data": {
                    "description": "Demographic data related to the person.",
                    "properties": {
                      "ethnicity_details": {
                        "properties": {
                          "ethnicity": {
                            "items": {
                              "enum": [
                                "cuban",
                                "hispanic_or_latino",
                                "mexican",
                                "not_hispanic_or_latino",
                                "other_hispanic_or_latino",
                                "prefer_not_to_answer",
                                "puerto_rican"
                              ],
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "ethnicity_other": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "us_cfpb_ethnicity_details_specs",
                        "type": "object"
                      },
                      "race_details": {
                        "properties": {
                          "race": {
                            "items": {
                              "enum": [
                                "african_american",
                                "american_indian_or_alaska_native",
                                "asian",
                                "asian_indian",
                                "black_or_african_american",
                                "chinese",
                                "ethiopian",
                                "filipino",
                                "guamanian_or_chamorro",
                                "haitian",
                                "jamaican",
                                "japanese",
                                "korean",
                                "native_hawaiian",
                                "native_hawaiian_or_other_pacific_islander",
                                "nigerian",
                                "other_asian",
                                "other_black_or_african_american",
                                "other_pacific_islander",
                                "prefer_not_to_answer",
                                "samoan",
                                "somali",
                                "vietnamese",
                                "white"
                              ],
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "race_other": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "us_cfpb_race_details_specs",
                        "type": "object"
                      },
                      "self_identified_gender": {
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "title": "us_cfpb_data_specs",
                    "type": "object"
                  },
                  "verification": {
                    "description": "The person's verification status.",
                    "properties": {
                      "additional_document": {
                        "properties": {
                          "back": {
                            "maxLength": 500,
                            "type": "string"
                          },
                          "front": {
                            "maxLength": 500,
                            "type": "string"
                          }
                        },
                        "title": "person_verification_document_specs",
                        "type": "object"
                      },
                      "document": {
                        "properties": {
                          "back": {
                            "maxLength": 500,
                            "type": "string"
                          },
                          "front": {
                            "maxLength": 500,
                            "type": "string"
                          }
                        },
                        "title": "person_verification_document_specs",
                        "type": "object"
                      }
                    },
                    "title": "person_verification_specs",
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/person"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        },
        "summary": "Update a person"
      }
    },
    "/v1/accounts/{account}/persons": {
      "get": {
        "description": "<p>Returns a list of people associated with the account’s legal entity. The people are returned sorted by creation date, with the most recent people appearing first.</p>",
        "operationId": "GetAccountsAccountPersons",
        "parameters": [
          {
            "in": "path",
            "name": "account",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "explode": true,
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "style": "deepObject"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "Filters on the list of people returned based on the person's relationship to the account's company.",
            "explode": true,
            "in": "query",
            "name": "relationship",
            "required": false,
            "schema": {
              "properties": {
                "authorizer": {
                  "type": "boolean"
                },
                "director": {
                  "type": "boolean"
                },
                "executive": {
                  "type": "boolean"
                },
                "legal_guardian": {
                  "type": "boolean"
                },
                "owner": {
                  "type": "boolean"
                },
                "representative": {
                  "type": "boolean"
                }
              },
              "title": "all_people_relationship_specs",
              "type": "object"
            },
            "style": "deepObject"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/person"
                      },
                      "type": "array"
                    },
                    "has_more": {
                      "description": "True if this list has another page of items after this one that can be fetched.",
                      "type": "boolean"
                    },
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    },
                    "url": {
                      "description": "The URL where this list can be accessed.",
                      "maxLength": 5000,
                      "type": "string"
                    }
                  },
                  "required": [
                    "data",
                    "has_more",
                    "object",
                    "url"
                  ],
                  "title": "PersonList",
                  "type": "object",
                  "x-expandableFields": [
                    "data"
                  ]
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        },
        "summary": "List all persons"
      },
      "post": {
        "description": "<p>Creates a new person.</p>",
        "operationId": "PostAccountsAccountPersons",
        "parameters": [
          {
            "in": "path",
            "name": "account",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {
                "additional_tos_acceptances": {
                  "explode": true,
                  "style": "deepObject"
                },
                "address": {
                  "explode": true,
                  "style": "deepObject"
                },
                "address_kana": {
                  "explode": true,
                  "style": "deepObject"
                },
                "address_kanji": {
                  "explode": true,
                  "style": "deepObject"
                },
                "dob": {
                  "explode": true,
                  "style": "deepObject"
                },
                "documents": {
                  "explode": true,
                  "style": "deepObject"
                },
                "expand": {
                  "explode": true,
                  "style": "deepObject"
                },
                "full_name_aliases": {
                  "explode": true,
                  "style": "deepObject"
                },
                "metadata": {
                  "explode": true,
                  "style": "deepObject"
                },
                "registered_address": {
                  "explode": true,
                  "style": "deepObject"
                },
                "relationship": {
                  "explode": true,
                  "style": "deepObject"
                },
                "us_cfpb_data": {
                  "explode": true,
                  "style": "deepObject"
                },
                "verification": {
                  "explode": true,
                  "style": "deepObject"
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "additional_tos_acceptances": {
                    "description": "Details on the legal guardian's or authorizer's acceptance of the required Stripe agreements.",
                    "properties": {
                      "account": {
                        "properties": {
                          "date": {
                            "format": "unix-time",
                            "type": "integer"
                          },
                          "ip": {
                            "type": "string"
                          },
                          "user_agent": {
                            "anyOf": [
                              {
                                "maxLength": 5000,
                                "type": "string"
                              },
                              {
                                "enum": [
                                  ""
                                ],
                                "type": "string"
                              }
                            ]
                          }
                        },
                        "title": "settings_terms_of_service_specs",
                        "type": "object"
                      }
                    },
                    "title": "person_additional_tos_acceptances_specs",
                    "type": "object"
                  },
                  "address": {
                    "description": "The person's address.",
                    "properties": {
                      "city": {
                        "maxLength": 100,
                        "type": "string"
                      },
                      "country": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "line1": {
                        "maxLength": 200,
                        "type": "string"
                      },
                      "line2": {
                        "maxLength": 200,
                        "type": "string"
                      },
                      "postal_code": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "state": {
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "title": "legal_entity_and_kyc_address_specs",
                    "type": "object"
                  },
                  "address_kana": {
                    "description": "The Kana variation of the person's address (Japan only).",
                    "properties": {
                      "city": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "country": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "line1": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "line2": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "postal_code": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "state": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "town": {
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "title": "japan_address_kana_specs",
                    "type": "object"
                  },
                  "address_kanji": {
                    "description": "The Kanji variation of the person's address (Japan only).",
                    "properties": {
                      "city": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "country": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "line1": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "line2": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "postal_code": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "state": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "town": {
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "title": "japan_address_kanji_specs",
                    "type": "object"
                  },
                  "dob": {
                    "anyOf": [
                      {
                        "properties": {
                          "day": {
                            "type": "integer"
                          },
                          "month": {
                            "type": "integer"
                          },
                          "year": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "day",
                          "month",
                          "year"
                        ],
                        "title": "date_of_birth_specs",
                        "type": "object"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "The person's date of birth."
                  },
                  "documents": {
                    "description": "Documents that may be submitted to satisfy various informational requests.",
                    "properties": {
                      "company_authorization": {
                        "properties": {
                          "files": {
                            "items": {
                              "anyOf": [
                                {
                                  "maxLength": 500,
                                  "type": "string"
                                },
                                {
                                  "enum": [
                                    ""
                                  ],
                                  "type": "string"
                                }
                              ]
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      },
                      "passport": {
                        "properties": {
                          "files": {
                            "items": {
                              "anyOf": [
                                {
                                  "maxLength": 500,
                                  "type": "string"
                                },
                                {
                                  "enum": [
                                    ""
                                  ],
                                  "type": "string"
                                }
                              ]
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      },
                      "visa": {
                        "properties": {
                          "files": {
                            "items": {
                              "anyOf": [
                                {
                                  "maxLength": 500,
                                  "type": "string"
                                },
                                {
                                  "enum": [
                                    ""
                                  ],
                                  "type": "string"
                                }
                              ]
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      }
                    },
                    "title": "person_documents_specs",
                    "type": "object"
                  },
                  "email": {
                    "description": "The person's email address.",
                    "type": "string"
                  },
                  "expand": {
                    "description": "Specifies which fields in the response should be expanded.",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "first_name": {
                    "description": "The person's first name.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "first_name_kana": {
                    "description": "The Kana variation of the person's first name (Japan only).",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "first_name_kanji": {
                    "description": "The Kanji variation of the person's first name (Japan only).",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "full_name_aliases": {
                    "anyOf": [
                      {
                        "items": {
                          "maxLength": 5000,
                          "type": "string"
                        },
                        "type": "array"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "A list of alternate names or aliases that the person is known by."
                  },
                  "gender": {
                    "description": "The person's gender (International regulations require either \"male\" or \"female\").",
                    "type": "string"
                  },
                  "id_number": {
                    "description": "The person's ID number, as appropriate for their country. For example, a social security number in the U.S., social insurance number in Canada, etc. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https://docs.stripe.com/js/tokens/create_token?type=pii).",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "id_number_secondary": {
                    "description": "The person's secondary ID number, as appropriate for their country, will be used for enhanced verification checks. In Thailand, this would be the laser code found on the back of an ID card. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https://docs.stripe.com/js/tokens/create_token?type=pii).",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "last_name": {
                    "description": "The person's last name.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "last_name_kana": {
                    "description": "The Kana variation of the person's last name (Japan only).",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "last_name_kanji": {
                    "description": "The Kanji variation of the person's last name (Japan only).",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "maiden_name": {
                    "description": "The person's maiden name.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "metadata": {
                    "anyOf": [
                      {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "type": "object"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`."
                  },
                  "nationality": {
                    "description": "The country where the person is a national. Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)), or \"XX\" if unavailable.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "person_token": {
                    "description": "A [person token](https://docs.stripe.com/connect/account-tokens), used to securely provide details to the person.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "phone": {
                    "description": "The person's phone number.",
                    "type": "string"
                  },
                  "political_exposure": {
                    "description": "Indicates if the person or any of their representatives, family members, or other closely related persons, declares that they hold or have held an important public job or function, in any jurisdiction.",
                    "enum": [
                      "existing",
                      "none"
                    ],
                    "type": "string"
                  },
                  "registered_address": {
                    "description": "The person's registered address.",
                    "properties": {
                      "city": {
                        "maxLength": 100,
                        "type": "string"
                      },
                      "country": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "line1": {
                        "maxLength": 200,
                        "type": "string"
                      },
                      "line2": {
                        "maxLength": 200,
                        "type": "string"
                      },
                      "postal_code": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "state": {
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "title": "address_specs",
                    "type": "object"
                  },
                  "relationship": {
                    "description": "The relationship that this person has with the account's legal entity.",
                    "properties": {
                      "authorizer": {
                        "type": "boolean"
                      },
                      "director": {
                        "type": "boolean"
                      },
                      "executive": {
                        "type": "boolean"
                      },
                      "legal_guardian": {
                        "type": "boolean"
                      },
                      "owner": {
                        "type": "boolean"
                      },
                      "percent_ownership": {
                        "anyOf": [
                          {
                            "type": "number"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "representative": {
                        "type": "boolean"
                      },
                      "title": {
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "title": "relationship_specs",
                    "type": "object"
                  },
                  "ssn_last_4": {
                    "description": "The last four digits of the person's Social Security number (U.S. only).",
                    "type": "string"
                  },
                  "us_cfpb_data": {
                    "description": "Demographic data related to the person.",
                    "properties": {
                      "ethnicity_details": {
                        "properties": {
                          "ethnicity": {
                            "items": {
                              "enum": [
                                "cuban",
                                "hispanic_or_latino",
                                "mexican",
                                "not_hispanic_or_latino",
                                "other_hispanic_or_latino",
                                "prefer_not_to_answer",
                                "puerto_rican"
                              ],
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "ethnicity_other": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "us_cfpb_ethnicity_details_specs",
                        "type": "object"
                      },
                      "race_details": {
                        "properties": {
                          "race": {
                            "items": {
                              "enum": [
                                "african_american",
                                "american_indian_or_alaska_native",
                                "asian",
                                "asian_indian",
                                "black_or_african_american",
                                "chinese",
                                "ethiopian",
                                "filipino",
                                "guamanian_or_chamorro",
                                "haitian",
                                "jamaican",
                                "japanese",
                                "korean",
                                "native_hawaiian",
                                "native_hawaiian_or_other_pacific_islander",
                                "nigerian",
                                "other_asian",
                                "other_black_or_african_american",
                                "other_pacific_islander",
                                "prefer_not_to_answer",
                                "samoan",
                                "somali",
                                "vietnamese",
                                "white"
                              ],
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "race_other": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "us_cfpb_race_details_specs",
                        "type": "object"
                      },
                      "self_identified_gender": {
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "title": "us_cfpb_data_specs",
                    "type": "object"
                  },
                  "verification": {
                    "description": "The person's verification status.",
                    "properties": {
                      "additional_document": {
                        "properties": {
                          "back": {
                            "maxLength": 500,
                            "type": "string"
                          },
                          "front": {
                            "maxLength": 500,
                            "type": "string"
                          }
                        },
                        "title": "person_verification_document_specs",
                        "type": "object"
                      },
                      "document": {
                        "properties": {
                          "back": {
                            "maxLength": 500,
                            "type": "string"
                          },
                          "front": {
                            "maxLength": 500,
                            "type": "string"
                          }
                        },
                        "title": "person_verification_document_specs",
                        "type": "object"
                      }
                    },
                    "title": "person_verification_specs",
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/person"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        },
        "summary": "Create a person"
      }
    },
    "/v1/accounts/{account}/persons/{person}": {
      "delete": {
        "description": "<p>Deletes an existing person’s relationship to the account’s legal entity. Any person with a relationship for an account can be deleted through the API, except if the person is the <code>account_opener</code>. If your integration is using the <code>executive</code> parameter, you cannot delete the only verified <code>executive</code> on file.</p>",
        "operationId": "DeleteAccountsAccountPersonsPerson",
        "parameters": [
          {
            "in": "path",
            "name": "account",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "person",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleted_person"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        },
        "summary": "Delete a person"
      },
      "get": {
        "description": "<p>Retrieves an existing person.</p>",
        "operationId": "GetAccountsAccountPersonsPerson",
        "parameters": [
          {
            "in": "path",
            "name": "account",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "explode": true,
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "style": "deepObject"
          },
          {
            "in": "path",
            "name": "person",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/person"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        },
        "summary": "Retrieve a person"
      },
      "post": {
        "description": "<p>Updates an existing person.</p>",
        "operationId": "PostAccountsAccountPersonsPerson",
        "parameters": [
          {
            "in": "path",
            "name": "account",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "person",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {
                "additional_tos_acceptances": {
                  "explode": true,
                  "style": "deepObject"
                },
                "address": {
                  "explode": true,
                  "style": "deepObject"
                },
                "address_kana": {
                  "explode": true,
                  "style": "deepObject"
                },
                "address_kanji": {
                  "explode": true,
                  "style": "deepObject"
                },
                "dob": {
                  "explode": true,
                  "style": "deepObject"
                },
                "documents": {
                  "explode": true,
                  "style": "deepObject"
                },
                "expand": {
                  "explode": true,
                  "style": "deepObject"
                },
                "full_name_aliases": {
                  "explode": true,
                  "style": "deepObject"
                },
                "metadata": {
                  "explode": true,
                  "style": "deepObject"
                },
                "registered_address": {
                  "explode": true,
                  "style": "deepObject"
                },
                "relationship": {
                  "explode": true,
                  "style": "deepObject"
                },
                "us_cfpb_data": {
                  "explode": true,
                  "style": "deepObject"
                },
                "verification": {
                  "explode": true,
                  "style": "deepObject"
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "additional_tos_acceptances": {
                    "description": "Details on the legal guardian's or authorizer's acceptance of the required Stripe agreements.",
                    "properties": {
                      "account": {
                        "properties": {
                          "date": {
                            "format": "unix-time",
                            "type": "integer"
                          },
                          "ip": {
                            "type": "string"
                          },
                          "user_agent": {
                            "anyOf": [
                              {
                                "maxLength": 5000,
                                "type": "string"
                              },
                              {
                                "enum": [
                                  ""
                                ],
                                "type": "string"
                              }
                            ]
                          }
                        },
                        "title": "settings_terms_of_service_specs",
                        "type": "object"
                      }
                    },
                    "title": "person_additional_tos_acceptances_specs",
                    "type": "object"
                  },
                  "address": {
                    "description": "The person's address.",
                    "properties": {
                      "city": {
                        "maxLength": 100,
                        "type": "string"
                      },
                      "country": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "line1": {
                        "maxLength": 200,
                        "type": "string"
                      },
                      "line2": {
                        "maxLength": 200,
                        "type": "string"
                      },
                      "postal_code": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "state": {
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "title": "legal_entity_and_kyc_address_specs",
                    "type": "object"
                  },
                  "address_kana": {
                    "description": "The Kana variation of the person's address (Japan only).",
                    "properties": {
                      "city": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "country": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "line1": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "line2": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "postal_code": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "state": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "town": {
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "title": "japan_address_kana_specs",
                    "type": "object"
                  },
                  "address_kanji": {
                    "description": "The Kanji variation of the person's address (Japan only).",
                    "properties": {
                      "city": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "country": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "line1": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "line2": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "postal_code": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "state": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "town": {
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "title": "japan_address_kanji_specs",
                    "type": "object"
                  },
                  "dob": {
                    "anyOf": [
                      {
                        "properties": {
                          "day": {
                            "type": "integer"
                          },
                          "month": {
                            "type": "integer"
                          },
                          "year": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "day",
                          "month",
                          "year"
                        ],
                        "title": "date_of_birth_specs",
                        "type": "object"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "The person's date of birth."
                  },
                  "documents": {
                    "description": "Documents that may be submitted to satisfy various informational requests.",
                    "properties": {
                      "company_authorization": {
                        "properties": {
                          "files": {
                            "items": {
                              "anyOf": [
                                {
                                  "maxLength": 500,
                                  "type": "string"
                                },
                                {
                                  "enum": [
                                    ""
                                  ],
                                  "type": "string"
                                }
                              ]
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      },
                      "passport": {
                        "properties": {
                          "files": {
                            "items": {
                              "anyOf": [
                                {
                                  "maxLength": 500,
                                  "type": "string"
                                },
                                {
                                  "enum": [
                                    ""
                                  ],
                                  "type": "string"
                                }
                              ]
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      },
                      "visa": {
                        "properties": {
                          "files": {
                            "items": {
                              "anyOf": [
                                {
                                  "maxLength": 500,
                                  "type": "string"
                                },
                                {
                                  "enum": [
                                    ""
                                  ],
                                  "type": "string"
                                }
                              ]
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      }
                    },
                    "title": "person_documents_specs",
                    "type": "object"
                  },
                  "email": {
                    "description": "The person's email address.",
                    "type": "string"
                  },
                  "expand": {
                    "description": "Specifies which fields in the response should be expanded.",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "first_name": {
                    "description": "The person's first name.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "first_name_kana": {
                    "description": "The Kana variation of the person's first name (Japan only).",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "first_name_kanji": {
                    "description": "The Kanji variation of the person's first name (Japan only).",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "full_name_aliases": {
                    "anyOf": [
                      {
                        "items": {
                          "maxLength": 5000,
                          "type": "string"
                        },
                        "type": "array"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "A list of alternate names or aliases that the person is known by."
                  },
                  "gender": {
                    "description": "The person's gender (International regulations require either \"male\" or \"female\").",
                    "type": "string"
                  },
                  "id_number": {
                    "description": "The person's ID number, as appropriate for their country. For example, a social security number in the U.S., social insurance number in Canada, etc. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https://docs.stripe.com/js/tokens/create_token?type=pii).",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "id_number_secondary": {
                    "description": "The person's secondary ID number, as appropriate for their country, will be used for enhanced verification checks. In Thailand, this would be the laser code found on the back of an ID card. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https://docs.stripe.com/js/tokens/create_token?type=pii).",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "last_name": {
                    "description": "The person's last name.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "last_name_kana": {
                    "description": "The Kana variation of the person's last name (Japan only).",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "last_name_kanji": {
                    "description": "The Kanji variation of the person's last name (Japan only).",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "maiden_name": {
                    "description": "The person's maiden name.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "metadata": {
                    "anyOf": [
                      {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "type": "object"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`."
                  },
                  "nationality": {
                    "description": "The country where the person is a national. Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)), or \"XX\" if unavailable.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "person_token": {
                    "description": "A [person token](https://docs.stripe.com/connect/account-tokens), used to securely provide details to the person.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "phone": {
                    "description": "The person's phone number.",
                    "type": "string"
                  },
                  "political_exposure": {
                    "description": "Indicates if the person or any of their representatives, family members, or other closely related persons, declares that they hold or have held an important public job or function, in any jurisdiction.",
                    "enum": [
                      "existing",
                      "none"
                    ],
                    "type": "string"
                  },
                  "registered_address": {
                    "description": "The person's registered address.",
                    "properties": {
                      "city": {
                        "maxLength": 100,
                        "type": "string"
                      },
                      "country": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "line1": {
                        "maxLength": 200,
                        "type": "string"
                      },
                      "line2": {
                        "maxLength": 200,
                        "type": "string"
                      },
                      "postal_code": {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "state": {
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "title": "address_specs",
                    "type": "object"
                  },
                  "relationship": {
                    "description": "The relationship that this person has with the account's legal entity.",
                    "properties": {
                      "authorizer": {
                        "type": "boolean"
                      },
                      "director": {
                        "type": "boolean"
                      },
                      "executive": {
                        "type": "boolean"
                      },
                      "legal_guardian": {
                        "type": "boolean"
                      },
                      "owner": {
                        "type": "boolean"
                      },
                      "percent_ownership": {
                        "anyOf": [
                          {
                            "type": "number"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ]
                      },
                      "representative": {
                        "type": "boolean"
                      },
                      "title": {
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "title": "relationship_specs",
                    "type": "object"
                  },
                  "ssn_last_4": {
                    "description": "The last four digits of the person's Social Security number (U.S. only).",
                    "type": "string"
                  },
                  "us_cfpb_data": {
                    "description": "Demographic data related to the person.",
                    "properties": {
                      "ethnicity_details": {
                        "properties": {
                          "ethnicity": {
                            "items": {
                              "enum": [
                                "cuban",
                                "hispanic_or_latino",
                                "mexican",
                                "not_hispanic_or_latino",
                                "other_hispanic_or_latino",
                                "prefer_not_to_answer",
                                "puerto_rican"
                              ],
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "ethnicity_other": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "us_cfpb_ethnicity_details_specs",
                        "type": "object"
                      },
                      "race_details": {
                        "properties": {
                          "race": {
                            "items": {
                              "enum": [
                                "african_american",
                                "american_indian_or_alaska_native",
                                "asian",
                                "asian_indian",
                                "black_or_african_american",
                                "chinese",
                                "ethiopian",
                                "filipino",
                                "guamanian_or_chamorro",
                                "haitian",
                                "jamaican",
                                "japanese",
                                "korean",
                                "native_hawaiian",
                                "native_hawaiian_or_other_pacific_islander",
                                "nigerian",
                                "other_asian",
                                "other_black_or_african_american",
                                "other_pacific_islander",
                                "prefer_not_to_answer",
                                "samoan",
                                "somali",
                                "vietnamese",
                                "white"
                              ],
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "race_other": {
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "us_cfpb_race_details_specs",
                        "type": "object"
                      },
                      "self_identified_gender": {
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "title": "us_cfpb_data_specs",
                    "type": "object"
                  },
                  "verification": {
                    "description": "The person's verification status.",
                    "properties": {
                      "additional_document": {
                        "properties": {
                          "back": {
                            "maxLength": 500,
                            "type": "string"
                          },
                          "front": {
                            "maxLength": 500,
                            "type": "string"
                          }
                        },
                        "title": "person_verification_document_specs",
                        "type": "object"
                      },
                      "document": {
                        "properties": {
                          "back": {
                            "maxLength": 500,
                            "type": "string"
                          },
                          "front": {
                            "maxLength": 500,
                            "type": "string"
                          }
                        },
                        "title": "person_verification_document_specs",
                        "type": "object"
                      }
                    },
                    "title": "person_verification_specs",
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/person"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        },
        "summary": "Update a person"
      }
    },
    "/v1/accounts/{account}/reject": {
      "post": {
        "description": "<p>With <a href=\"/connect\">Connect</a>, you can reject accounts that you have flagged as suspicious.</p>\n\n<p>Only accounts where your platform is liable for negative account balances, which includes Custom and Express accounts, can be rejected. Test-mode accounts can be rejected at any time. Live-mode accounts can only be rejected after all balances are zero.</p>",
        "operationId": "PostAccountsAccountReject",
        "parameters": [
          {
            "in": "path",
            "name": "account",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {
                "expand": {
                  "explode": true,
                  "style": "deepObject"
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "expand": {
                    "description": "Specifies which fields in the response should be expanded.",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "reason": {
                    "description": "The reason for rejecting the account. Can be `fraud`, `terms_of_service`, or `other`.",
                    "maxLength": 5000,
                    "type": "string"
                  }
                },
                "required": [
                  "reason"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        },
        "summary": "Reject an account"
      }
    },
    "/v1/apple_pay/domains": {
      "get": {
        "description": "<p>List apple pay domains.</p>",
        "operationId": "GetApplePayDomains",
        "parameters": [
          {
            "in": "query",
            "name": "domain_name",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "explode": true,
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "style": "deepObject"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/apple_pay_domain"
                      },
                      "type": "array"
                    },
                    "has_more": {
                      "description": "True if this list has another page of items after this one that can be fetched.",
                      "type": "boolean"
                    },
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    },
                    "url": {
                      "description": "The URL where this list can be accessed.",
                      "maxLength": 5000,
                      "pattern": "^/v1/apple_pay/domains",
                      "type": "string"
                    }
                  },
                  "required": [
                    "data",
                    "has_more",
                    "object",
                    "url"
                  ],
                  "title": "ApplePayDomainList",
                  "type": "object",
                  "x-expandableFields": [
                    "data"
                  ]
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        }
      },
      "post": {
        "description": "<p>Create an apple pay domain.</p>",
        "operationId": "PostApplePayDomains",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {
                "expand": {
                  "explode": true,
                  "style": "deepObject"
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "domain_name": {
                    "type": "string"
                  },
                  "expand": {
                    "description": "Specifies which fields in the response should be expanded.",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "domain_name"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apple_pay_domain"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        }
      }
    },
    "/v1/apple_pay/domains/{domain}": {
      "delete": {
        "description": "<p>Delete an apple pay domain.</p>",
        "operationId": "DeleteApplePayDomainsDomain",
        "parameters": [
          {
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleted_apple_pay_domain"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        }
      },
      "get": {
        "description": "<p>Retrieve an apple pay domain.</p>",
        "operationId": "GetApplePayDomainsDomain",
        "parameters": [
          {
            "in": "path",
            "name": "domain",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "explode": true,
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "style": "deepObject"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apple_pay_domain"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        }
      }
    },
    "/v1/application_fees": {
      "get": {
        "description": "<p>Returns a list of application fees you’ve previously collected. The application fees are returned in sorted order, with the most recent fees appearing first.</p>",
        "operationId": "GetApplicationFees",
        "parameters": [
          {
            "description": "Only return application fees for the charge specified by this charge ID.",
            "in": "query",
            "name": "charge",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Only return applications fees that were created during the given date interval.",
            "explode": true,
            "in": "query",
            "name": "created",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "properties": {
                    "gt": {
                      "type": "integer"
                    },
                    "gte": {
                      "type": "integer"
                    },
                    "lt": {
                      "type": "integer"
                    },
                    "lte": {
                      "type": "integer"
                    }
                  },
                  "title": "range_query_specs",
                  "type": "object"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "style": "deepObject"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "explode": true,
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "style": "deepObject"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/application_fee"
                      },
                      "type": "array"
                    },
                    "has_more": {
                      "description": "True if this list has another page of items after this one that can be fetched.",
                      "type": "boolean"
                    },
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    },
                    "url": {
                      "description": "The URL where this list can be accessed.",
                      "maxLength": 5000,
                      "pattern": "^/v1/application_fees",
                      "type": "string"
                    }
                  },
                  "required": [
                    "data",
                    "has_more",
                    "object",
                    "url"
                  ],
                  "title": "PlatformEarningList",
                  "type": "object",
                  "x-expandableFields": [
                    "data"
                  ]
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        },
        "summary": "List all application fees"
      }
    },
    "/v1/application_fees/{fee}/refunds/{id}": {
      "get": {
        "description": "<p>By default, you can see the 10 most recent refunds stored directly on the application fee object, but you can also retrieve details about a specific refund stored on the application fee.</p>",
        "operationId": "GetApplicationFeesFeeRefundsId",
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "explode": true,
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "style": "deepObject"
          },
          {
            "in": "path",
            "name": "fee",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fee_refund"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        },
        "summary": "Retrieve an application fee refund"
      },
      "post": {
        "description": "<p>Updates the specified application fee refund by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>\n\n<p>This request only accepts metadata as an argument.</p>",
        "operationId": "PostApplicationFeesFeeRefundsId",
        "parameters": [
          {
            "in": "path",
            "name": "fee",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {
                "expand": {
                  "explode": true,
                  "style": "deepObject"
                },
                "metadata": {
                  "explode": true,
                  "style": "deepObject"
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "expand": {
                    "description": "Specifies which fields in the response should be expanded.",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "metadata": {
                    "anyOf": [
                      {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "type": "object"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`."
                  }
                },
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fee_refund"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        },
        "summary": "Update an application fee refund"
      }
    },
    "/v1/application_fees/{id}": {
      "get": {
        "description": "<p>Retrieves the details of an application fee that your account has collected. The same information is returned when refunding the application fee.</p>",
        "operationId": "GetApplicationFeesId",
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "explode": true,
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "style": "deepObject"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/application_fee"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        },
        "summary": "Retrieve an application fee"
      }
    },
    "/v1/application_fees/{id}/refund": {
      "post": {
        "description": "",
        "operationId": "PostApplicationFeesIdRefund",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {
                "expand": {
                  "explode": true,
                  "style": "deepObject"
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "amount": {
                    "type": "integer"
                  },
                  "directive": {
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "expand": {
                    "description": "Specifies which fields in the response should be expanded.",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/application_fee"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        }
      }
    },
    "/v1/application_fees/{id}/refunds": {
      "get": {
        "description": "<p>You can see a list of the refunds belonging to a specific application fee. Note that the 10 most recent refunds are always available by default on the application fee object. If you need more than those 10, you can use this API method and the <code>limit</code> and <code>starting_after</code> parameters to page through additional refunds.</p>",
        "operationId": "GetApplicationFeesIdRefunds",
        "parameters": [
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "explode": true,
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "style": "deepObject"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "properties": {
                    "data": {
                      "description": "Details about each object.",
                      "items": {
                        "$ref": "#/components/schemas/fee_refund"
                      },
                      "type": "array"
                    },
                    "has_more": {
                      "description": "True if this list has another page of items after this one that can be fetched.",
                      "type": "boolean"
                    },
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    },
                    "url": {
                      "description": "The URL where this list can be accessed.",
                      "maxLength": 5000,
                      "type": "string"
                    }
                  },
                  "required": [
                    "data",
                    "has_more",
                    "object",
                    "url"
                  ],
                  "title": "FeeRefundList",
                  "type": "object",
                  "x-expandableFields": [
                    "data"
                  ]
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        },
        "summary": "List all application fee refunds"
      },
      "post": {
        "description": "<p>Refunds an application fee that has previously been collected but not yet refunded.\nFunds will be refunded to the Stripe account from which the fee was originally collected.</p>\n\n<p>You can optionally refund only part of an application fee.\nYou can do so multiple times, until the entire fee has been refunded.</p>\n\n<p>Once entirely refunded, an application fee can’t be refunded again.\nThis method will raise an error when called on an already-refunded application fee,\nor when trying to refund more money than is left on an application fee.</p>",
        "operationId": "PostApplicationFeesIdRefunds",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {
                "expand": {
                  "explode": true,
                  "style": "deepObject"
                },
                "metadata": {
                  "explode": true,
                  "style": "deepObject"
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "amount": {
                    "description": "A positive integer, in _cents (or local equivalent)_, representing how much of this fee to refund. Can refund only up to the remaining unrefunded amount of the fee.",
                    "type": "integer"
                  },
                  "expand": {
                    "description": "Specifies which fields in the response should be expanded.",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "metadata": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fee_refund"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        },
        "summary": "Create an application fee refund"
      }
    },
    "/v1/apps/secrets": {
      "get": {
        "description": "<p>List all secrets stored on the given scope.</p>",
        "operationId": "GetAppsSecrets",
        "parameters": [
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "explode": true,
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "style": "deepObject"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "Specifies the scoping of the secret. Requests originating from UI extensions can only access account-scoped secrets or secrets scoped to their own user.",
            "explode": true,
            "in": "query",
            "name": "scope",
            "required": true,
            "schema": {
              "properties": {
                "type": {
                  "enum": [
                    "account",
                    "user"
                  ],
                  "type": "string"
                },
                "user": {
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "type"
              ],
              "title": "scope_param",
              "type": "object"
            },
            "style": "deepObject"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/apps.secret"
                      },
                      "type": "array"
                    },
                    "has_more": {
                      "description": "True if this list has another page of items after this one that can be fetched.",
                      "type": "boolean"
                    },
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    },
                    "url": {
                      "description": "The URL where this list can be accessed.",
                      "maxLength": 5000,
                      "pattern": "^/v1/apps/secrets",
                      "type": "string"
                    }
                  },
                  "required": [
                    "data",
                    "has_more",
                    "object",
                    "url"
                  ],
                  "title": "SecretServiceResourceSecretList",
                  "type": "object",
                  "x-expandableFields": [
                    "data"
                  ]
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        },
        "summary": "List secrets"
      },
      "post": {
        "description": "<p>Create or replace a secret in the secret store.</p>",
        "operationId": "PostAppsSecrets",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {
                "expand": {
                  "explode": true,
                  "style": "deepObject"
                },
                "scope": {
                  "explode": true,
                  "style": "deepObject"
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "expand": {
                    "description": "Specifies which fields in the response should be expanded.",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "expires_at": {
                    "description": "The Unix timestamp for the expiry time of the secret, after which the secret deletes.",
                    "format": "unix-time",
                    "type": "integer"
                  },
                  "name": {
                    "description": "A name for the secret that's unique within the scope.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "payload": {
                    "description": "The plaintext secret value to be stored.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "scope": {
                    "description": "Specifies the scoping of the secret. Requests originating from UI extensions can only access account-scoped secrets or secrets scoped to their own user.",
                    "properties": {
                      "type": {
                        "enum": [
                          "account",
                          "user"
                        ],
                        "type": "string"
                      },
                      "user": {
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "title": "scope_param",
                    "type": "object"
                  }
                },
                "required": [
                  "name",
                  "payload",
                  "scope"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apps.secret"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        },
        "summary": "Set a Secret"
      }
    },
    "/v1/apps/secrets/delete": {
      "post": {
        "description": "<p>Deletes a secret from the secret store by name and scope.</p>",
        "operationId": "PostAppsSecretsDelete",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {
                "expand": {
                  "explode": true,
                  "style": "deepObject"
                },
                "scope": {
                  "explode": true,
                  "style": "deepObject"
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "expand": {
                    "description": "Specifies which fields in the response should be expanded.",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "name": {
                    "description": "A name for the secret that's unique within the scope.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "scope": {
                    "description": "Specifies the scoping of the secret. Requests originating from UI extensions can only access account-scoped secrets or secrets scoped to their own user.",
                    "properties": {
                      "type": {
                        "enum": [
                          "account",
                          "user"
                        ],
                        "type": "string"
                      },
                      "user": {
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "title": "scope_param",
                    "type": "object"
                  }
                },
                "required": [
                  "name",
                  "scope"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apps.secret"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        },
        "summary": "Delete a Secret"
      }
    },
    "/v1/apps/secrets/find": {
      "get": {
        "description": "<p>Finds a secret in the secret store by name and scope.</p>",
        "operationId": "GetAppsSecretsFind",
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "explode": true,
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "style": "deepObject"
          },
          {
            "description": "A name for the secret that's unique within the scope.",
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Specifies the scoping of the secret. Requests originating from UI extensions can only access account-scoped secrets or secrets scoped to their own user.",
            "explode": true,
            "in": "query",
            "name": "scope",
            "required": true,
            "schema": {
              "properties": {
                "type": {
                  "enum": [
                    "account",
                    "user"
                  ],
                  "type": "string"
                },
                "user": {
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "type"
              ],
              "title": "scope_param",
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apps.secret"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        },
        "summary": "Find a Secret"
      }
    },
    "/v1/balance": {
      "get": {
        "description": "<p>Retrieves the current account balance, based on the authentication that was used to make the request.\n For a sample request, see <a href=\"/docs/connect/account-balances#accounting-for-negative-balances\">Accounting for negative balances</a>.</p>",
        "operationId": "GetBalance",
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "explode": true,
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "style": "deepObject"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/balance"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        },
        "summary": "Retrieve balance"
      }
    }
  },
  "security": [
    {
      "basicAuth": []
    },
    {
      "bearerAuth": []
    }
  ],
  "servers": [
    {
      "url": "https://api.stripe.com/"
    }
  ]
}